(self["webpackChunkxboilerplate"] = self["webpackChunkxboilerplate"] || []).push([["mf-dep_vendors-node_modules_antv_l7-district_es_index_js"],{

/***/ "./node_modules/@antv/l7-district/es/common.js":
/*!*****************************************************!*\
  !*** ./node_modules/@antv/l7-district/es/common.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getRegionByAdcode": function() { return /* binding */ getRegionByAdcode; }
/* harmony export */ });
/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./const */ "./node_modules/@antv/l7-district/es/const.js");

function getRegionByAdcode(code) {
  var region = Object.values(_const__WEBPACK_IMPORTED_MODULE_0__.RegionList).find(function (region) {
    return region.child.indexOf(code) !== -1;
  });
  return region;
}

/***/ }),

/***/ "./node_modules/@antv/l7-district/es/config.js":
/*!*****************************************************!*\
  !*** ./node_modules/@antv/l7-district/es/config.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "setDataConfig": function() { return /* binding */ setDataConfig; },
/* harmony export */   "setDataLevel": function() { return /* binding */ setDataLevel; },
/* harmony export */   "getDataConfig": function() { return /* binding */ getDataConfig; },
/* harmony export */   "DataConfig": function() { return /* binding */ DataConfig; }
/* harmony export */ });
/* harmony import */ var lodash_merge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/merge */ "./node_modules/lodash/merge.js");
/* harmony import */ var lodash_merge__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_merge__WEBPACK_IMPORTED_MODULE_0__);
// tslint:disable-next-line:no-submodule-imports

var DataLevel = 2; // d

var dataLevel2 = {
  world: {
    fill: {
      type: 'pbf',
      url: 'https://gw.alipayobjects.com/os/bmw-prod/ad26cd25-96ea-40fd-935d-7e21a5c08893.bin'
    },
    line: {
      type: 'pbf',
      url: 'https://gw.alipayobjects.com/os/bmw-prod/62f61f5f-cca7-4137-845d-13c8f9969664.bin'
    },
    label: {
      type: 'pbf',
      url: 'https://gw.alipayobjects.com/os/bmw-prod/90c51eb3-04d7-402f-bd05-95e4bd27dd62.bin',
      parser: {
        type: 'geojson'
      }
    },
    nationalBoundaries: {
      type: 'json',
      url: 'https://gw.alipayobjects.com/os/bmw-prod/ee493a41-0558-4c0e-bee6-520276c4f1a8.json'
    }
  },
  country: {
    CHN: {
      1: {
        // 省份
        fill: {
          // 中国地图省份围栏数据
          type: 'pbf',
          url: 'https://gw.alipayobjects.com/os/bmw-prod/71ac4de3-bb14-449d-a97d-2b98e25ec8df.bin'
        },
        line: {
          type: 'pbf',
          url: 'https://gw.alipayobjects.com/os/bmw-prod/70ec087e-c48a-4b76-8825-6452f17bae7a.bin'
        },
        provinceLine: {
          type: 'pbf',
          url: 'https://gw.alipayobjects.com/os/bmw-prod/0024caaf-86b2-4e75-a3d1-6d2146490b67.bin'
        },
        label: {
          type: 'json',
          url: 'https://gw.alipayobjects.com/os/bmw-prod/36832a45-68f8-4b51-b006-9dec71f92a23.json'
        }
      },
      2: {
        // 城市
        fill: {
          type: 'pbf',
          url: 'https://gw.alipayobjects.com/os/bmw-prod/522c6496-c711-4581-88db-c3741cd39abd.bin'
        },
        line: {
          type: 'pbf',
          url: 'https://gw.alipayobjects.com/os/bmw-prod/f6a4e2b1-359b-43a6-921c-39d2088d1dab.bin'
        },
        cityLine: {
          type: 'pbf',
          url: 'https://gw.alipayobjects.com/os/bmw-prod/f6a4e2b1-359b-43a6-921c-39d2088d1dab.bin'
        },
        provinceLine: {
          type: 'pbf',
          url: 'https://gw.alipayobjects.com/os/bmw-prod/0024caaf-86b2-4e75-a3d1-6d2146490b67.bin'
        }
      },
      3: {
        // 区县
        fill: {
          type: 'pbf',
          url: 'https://gw.alipayobjects.com/os/bmw-prod/524f7de2-7d69-4fa7-8da3-7ff42fa69ee4.bin'
        },
        // line: {
        //   type: 'pbf',
        //   url:
        //     'https://gw.alipayobjects.com/os/bmw-prod/bc97875a-90f2-42c0-a62c-43d2efd7460d.bin',
        // },
        countryLine: {
          type: 'pbf',
          url: 'https://gw.alipayobjects.com/os/bmw-prod/bc97875a-90f2-42c0-a62c-43d2efd7460d.bin'
        },
        cityLine: {
          type: 'pbf',
          url: 'https://gw.alipayobjects.com/os/bmw-prod/8bfbfe7e-bd0e-4bbe-84d8-629f4dc7abc4.bin'
        },
        provinceLine: {
          type: 'pbf',
          url: 'https://gw.alipayobjects.com/os/bmw-prod/778ad7ba-5a3f-4ed6-a94a-b8ab8acae9d6.bin'
        }
      },
      nationalBoundaries: {
        type: 'json',
        url: 'https://gw.alipayobjects.com/os/bmw-prod/ee493a41-0558-4c0e-bee6-520276c4f1a8.json'
      },
      nationalBoundaries2: {
        type: 'json',
        url: 'https://gw.alipayobjects.com/os/bmw-prod/f2189cc4-662b-4358-8573-36f0f918b7ca.json'
      },
      island: {
        type: 'json',
        url: 'https://gw.alipayobjects.com/os/bmw-prod/fe49b393-1147-4769-94ed-70471f4ff15d.json'
      }
    }
  }
}; // 高精度数据

var dataLevel1 = {
  world: {
    // 世界地图数据
    fill: {
      // 世界地图填充数据
      type: 'pbf',
      url: 'https://gw.alipayobjects.com/os/bmw-prod/35bb8365-1926-471c-b357-db2c02ff3a81.bin'
    },
    line: {
      // 世界地图边界数据
      type: 'pbf',
      url: 'https://gw.alipayobjects.com/os/bmw-prod/8ec671c3-a4f9-4fdf-8e88-85d2ab1d8930.bin'
    },
    label: {
      // 世界地图标注数据
      type: 'pbf',
      url: 'https://gw.alipayobjects.com/os/bmw-prod/90c51eb3-04d7-402f-bd05-95e4bd27dd62.bin',
      parser: {
        type: 'geojson'
      }
    },
    nationalBoundaries: {
      // 世界地图
      type: 'json',
      url: 'https://gw.alipayobjects.com/os/bmw-prod/ee493a41-0558-4c0e-bee6-520276c4f1a8.json'
    }
  },
  country: {
    // 国家地图
    CHN: {
      // 中国地图
      1: {
        // 省级地图
        fill: {
          type: 'pbf',
          url: 'https://gw.alipayobjects.com/os/bmw-prod/380370e0-76aa-4240-8874-5732de77e71d.bin'
        },
        line: {
          type: 'pbf',
          url: 'https://gw.alipayobjects.com/os/bmw-prod/70ec087e-c48a-4b76-8825-6452f17bae7a.bin'
        },
        provinceLine: {
          type: 'pbf',
          url: 'https://gw.alipayobjects.com/os/bmw-prod/778ad7ba-5a3f-4ed6-a94a-b8ab8acae9d6.bin'
        },
        label: {
          type: 'json',
          url: 'https://gw.alipayobjects.com/os/bmw-prod/36832a45-68f8-4b51-b006-9dec71f92a23.json'
        }
      },
      2: {
        // 市级地图
        fill: {
          type: 'pbf',
          url: 'https://gw.alipayobjects.com/os/bmw-prod/feeb1f06-11c6-4495-84c9-f41ea6f77123.bin'
        },
        line: {
          type: 'pbf',
          url: 'https://gw.alipayobjects.com/os/bmw-prod/8bfbfe7e-bd0e-4bbe-84d8-629f4dc7abc4.bin'
        },
        cityLine: {
          type: 'pbf',
          url: 'https://gw.alipayobjects.com/os/bmw-prod/8bfbfe7e-bd0e-4bbe-84d8-629f4dc7abc4.bin'
        },
        provinceLine: {
          type: 'pbf',
          url: 'https://gw.alipayobjects.com/os/bmw-prod/778ad7ba-5a3f-4ed6-a94a-b8ab8acae9d6.bin'
        }
      },
      3: {
        // 县级地图
        fill: {
          // 填充
          type: 'pbf',
          url: 'https://gw.alipayobjects.com/os/bmw-prod/24a9ee83-2be1-4fc1-b187-769ac939269d.bin'
        },
        line: {
          // 边界
          type: 'pbf',
          url: 'https://gw.alipayobjects.com/os/bmw-prod/bc97875a-90f2-42c0-a62c-43d2efd7460d.bin'
        },
        countryLine: {
          type: 'pbf',
          url: 'https://gw.alipayobjects.com/os/bmw-prod/bc97875a-90f2-42c0-a62c-43d2efd7460d.bin'
        },
        cityLine: {
          type: 'pbf',
          url: 'https://gw.alipayobjects.com/os/bmw-prod/8bfbfe7e-bd0e-4bbe-84d8-629f4dc7abc4.bin'
        },
        provinceLine: {
          type: 'pbf',
          url: 'https://gw.alipayobjects.com/os/bmw-prod/778ad7ba-5a3f-4ed6-a94a-b8ab8acae9d6.bin'
        }
      },
      nationalBoundaries: {
        type: 'json',
        url: 'https://gw.alipayobjects.com/os/bmw-prod/ee493a41-0558-4c0e-bee6-520276c4f1a8.json'
      },
      nationalBoundaries2: {
        type: 'json',
        url: 'https://gw.alipayobjects.com/os/bmw-prod/f2189cc4-662b-4358-8573-36f0f918b7ca.json'
      },
      island: {
        type: 'json',
        url: 'https://gw.alipayobjects.com/os/bmw-prod/fe49b393-1147-4769-94ed-70471f4ff15d.json'
      }
    }
  },
  province: {
    110000: ''
  }
};
var DataLevelMap = {
  1: dataLevel1,
  2: dataLevel2
};

function setDataConfig(config) {
  var level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DataLevel;
  lodash_merge__WEBPACK_IMPORTED_MODULE_0___default()(DataLevelMap[level], config);
}

function getDataConfig() {
  var level = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DataLevel;
  return DataLevelMap[level];
}

function setDataLevel(level) {
  DataLevel = level;
}

var DataConfig = DataLevelMap[DataLevel];


/***/ }),

/***/ "./node_modules/@antv/l7-district/es/const.js":
/*!****************************************************!*\
  !*** ./node_modules/@antv/l7-district/es/const.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DRILL_TYPE_LIST": function() { return /* binding */ DRILL_TYPE_LIST; },
/* harmony export */   "RegionList": function() { return /* binding */ RegionList; }
/* harmony export */ });
var DRILL_TYPE_LIST = ['Country', 'Region', 'Province', 'City', 'County'];
var RegionList = {
  '100': {
    name: '华北区',
    code: '100',
    child: [110000, 120000, 130000, 150000, 210000, 220000, 230000, 370000],
    center: [118.740234375, 42.87596410238256]
  },
  '101': {
    name: '华东区',
    code: '101',
    child: [320000, 340000, 310000],
    center: [118.564453125, 31.765537409484374]
  },
  '102': {
    name: '华南区',
    code: '102',
    child: [440000, 450000, 460000],
    center: [110.709228515625, 22.238259929564308]
  },
  '103': {
    name: '华西区',
    code: '103',
    child: [500000, 510000, 520000, 530000],
    center: [90.263671875, 36.73888412439431]
  },
  '104': {
    name: '华中区',
    code: '104',
    child: [330000, 350000, 360000, 420000, 430000],
    center: [118.05908203124999, 28.38173504322308]
  },
  '301': {
    name: '中西区',
    code: '301',
    child: [140000, 410000, 540000, 610000, 620000, 630000, 640000, 650000],
    center: [109.1162109375, 35.209721645221386]
  },
  '701': {
    name: '港澳台',
    code: '701',
    child: [710000, 810000, 820000]
  }
};

/***/ }),

/***/ "./node_modules/@antv/l7-district/es/index.js":
/*!****************************************************!*\
  !*** ./node_modules/@antv/l7-district/es/index.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "WorldLayer": function() { return /* reexport safe */ _layer_world__WEBPACK_IMPORTED_MODULE_5__.default; },
/* harmony export */   "CountryLayer": function() { return /* reexport safe */ _layer_country__WEBPACK_IMPORTED_MODULE_1__.default; },
/* harmony export */   "ProvinceLayer": function() { return /* reexport safe */ _layer_province__WEBPACK_IMPORTED_MODULE_4__.default; },
/* harmony export */   "CityLayer": function() { return /* reexport safe */ _layer_city__WEBPACK_IMPORTED_MODULE_0__.default; },
/* harmony export */   "CountyLayer": function() { return /* reexport safe */ _layer_county__WEBPACK_IMPORTED_MODULE_2__.default; },
/* harmony export */   "DrillDownLayer": function() { return /* reexport safe */ _layer_drillDown__WEBPACK_IMPORTED_MODULE_3__.default; },
/* harmony export */   "RegionLayer": function() { return /* reexport safe */ _layer_region__WEBPACK_IMPORTED_MODULE_6__.default; },
/* harmony export */   "DataConfig": function() { return /* reexport safe */ _config__WEBPACK_IMPORTED_MODULE_7__.DataConfig; },
/* harmony export */   "getDataConfig": function() { return /* reexport safe */ _config__WEBPACK_IMPORTED_MODULE_7__.getDataConfig; },
/* harmony export */   "setDataConfig": function() { return /* reexport safe */ _config__WEBPACK_IMPORTED_MODULE_7__.setDataConfig; },
/* harmony export */   "setDataLevel": function() { return /* reexport safe */ _config__WEBPACK_IMPORTED_MODULE_7__.setDataLevel; },
/* harmony export */   "DRILL_TYPE_LIST": function() { return /* reexport safe */ _const__WEBPACK_IMPORTED_MODULE_9__.DRILL_TYPE_LIST; },
/* harmony export */   "RegionList": function() { return /* reexport safe */ _const__WEBPACK_IMPORTED_MODULE_9__.RegionList; },
/* harmony export */   "getRegionByAdcode": function() { return /* reexport safe */ _common__WEBPACK_IMPORTED_MODULE_10__.getRegionByAdcode; }
/* harmony export */ });
/* harmony import */ var _layer_city__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./layer/city */ "./node_modules/@antv/l7-district/es/layer/city.js");
/* harmony import */ var _layer_country__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./layer/country */ "./node_modules/@antv/l7-district/es/layer/country.js");
/* harmony import */ var _layer_county__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./layer/county */ "./node_modules/@antv/l7-district/es/layer/county.js");
/* harmony import */ var _layer_drillDown__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./layer/drillDown */ "./node_modules/@antv/l7-district/es/layer/drillDown.js");
/* harmony import */ var _layer_province__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./layer/province */ "./node_modules/@antv/l7-district/es/layer/province.js");
/* harmony import */ var _layer_world__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./layer/world */ "./node_modules/@antv/l7-district/es/layer/world.js");
/* harmony import */ var _layer_region__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./layer/region */ "./node_modules/@antv/l7-district/es/layer/region.js");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./config */ "./node_modules/@antv/l7-district/es/config.js");
/* harmony import */ var _layer_interface__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./layer/interface */ "./node_modules/@antv/l7-district/es/layer/interface.js");
/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./const */ "./node_modules/@antv/l7-district/es/const.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./common */ "./node_modules/@antv/l7-district/es/common.js");
// import { DataConfig, setDataConfig } from './config_1';













/***/ }),

/***/ "./node_modules/@antv/l7-district/es/layer/baseLayer.js":
/*!**************************************************************!*\
  !*** ./node_modules/@antv/l7-district/es/layer/baseLayer.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ BaseLayer; }
/* harmony export */ });
/* harmony import */ var _antv_l7__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @antv/l7 */ "./node_modules/@antv/l7/es/index.js");
/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! eventemitter3 */ "./node_modules/eventemitter3/index.js");
/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(eventemitter3__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var geobuf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! geobuf */ "./node_modules/geobuf/index.js");
/* harmony import */ var lodash_isObject__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/isObject */ "./node_modules/lodash/isObject.js");
/* harmony import */ var lodash_isObject__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_isObject__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var lodash_mergeWith__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash/mergeWith */ "./node_modules/lodash/mergeWith.js");
/* harmony import */ var lodash_mergeWith__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash_mergeWith__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var pbf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! pbf */ "./node_modules/pbf/index.js");
/* harmony import */ var pbf__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(pbf__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var simplify_geojson__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! simplify-geojson */ "./node_modules/simplify-geojson/index.js");
/* harmony import */ var simplify_geojson__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(simplify_geojson__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../config */ "./node_modules/@antv/l7-district/es/config.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }


 // @ts-ignore

 // tslint:disable-next-line: no-submodule-imports

 // tslint:disable-next-line: no-submodule-imports

 // @ts-ignore

 // @ts-ignore



var eventList = ['loaded'];

function mergeCustomizer(objValue, srcValue) {
  if (Array.isArray(srcValue)) {
    return srcValue;
  }
}

var BaseLayer = /*#__PURE__*/function (_EventEmitter) {
  _inherits(BaseLayer, _EventEmitter);

  var _super = _createSuper(BaseLayer);

  function BaseLayer(scene) {
    var _this;

    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, BaseLayer);

    _this = _super.call(this);
    _this.fillLayer = void 0;
    _this.lineLayer = void 0;
    _this.labelLayer = void 0;
    _this.bubbleLayer = void 0;
    _this.loaded = false;
    _this.scene = void 0;
    _this.options = void 0;
    _this.layers = [];
    _this.fillData = void 0;
    _this.layerType = void 0;
    _this.popup = void 0;
    _this.scene = scene;
    _this.options = lodash_mergeWith__WEBPACK_IMPORTED_MODULE_4___default()(_this.getDefaultOption(), option, mergeCustomizer);
    (0,_config__WEBPACK_IMPORTED_MODULE_7__.setDataLevel)(_this.options.geoDataLevel);
    return _this;
  }

  _createClass(BaseLayer, [{
    key: "destroy",
    value: function destroy() {
      var _this2 = this;

      this.layers.forEach(function (layer) {
        return _this2.scene.removeLayer(layer);
      });
      this.layers.length = 0;
    }
  }, {
    key: "show",
    value: function show() {
      this.layers.forEach(function (layer) {
        return layer.show();
      });
    }
  }, {
    key: "hide",
    value: function hide() {
      this.layers.forEach(function (layer) {
        return layer.hide();
      });
    }
  }, {
    key: "setOption",
    value: function setOption(newOption) {
      this.options = lodash_mergeWith__WEBPACK_IMPORTED_MODULE_4___default()(this.options, newOption, mergeCustomizer);
    }
  }, {
    key: "getFillData",
    value: function getFillData() {
      return this.fillData;
    }
  }, {
    key: "getOptions",
    value: function getOptions() {
      return this.options;
    }
  }, {
    key: "getLayer",
    value: function getLayer(type) {
      // @ts-ignore
      return this[type + 'Layer'];
    }
  }, {
    key: "on",
    value: function on(event, handle) {
      var _this3 = this;

      var layerType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'fill';

      if (eventList.indexOf(event) !== -1) {
        _get(_getPrototypeOf(BaseLayer.prototype), "on", this).call(this, event, handle);
      } else {
        if (this.loaded && this.getLayer(layerType)) {
          this.getLayer(layerType).on(event, handle);
        } else {
          _get(_getPrototypeOf(BaseLayer.prototype), "once", this).call(this, 'loaded', function () {
            _this3.getLayer(layerType).on(event, handle);
          });
        }
      }

      return this;
    }
  }, {
    key: "off",
    value: function off(event, handle) {
      var _this4 = this;

      var layerType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'fill';

      if (eventList.indexOf(event) !== -1) {
        _get(_getPrototypeOf(BaseLayer.prototype), "on", this).call(this, event, handle);
      } else if (this.getLayer(layerType)) {
        if (this.loaded && this.getLayer(layerType)) {
          this.getLayer(layerType).off(event, handle);
        } else {
          _get(_getPrototypeOf(BaseLayer.prototype), "once", this).call(this, 'loaded', function () {
            _this4.getLayer(layerType).off(event, handle);
          });
        }
      }

      return this;
    }
  }, {
    key: "updateData",
    value: function updateData(newData, joinByField) {
      var _this$options$bubble;

      this.setOption({
        data: newData,
        joinBy: joinByField
      });
      var _this$options = this.options,
          _this$options$data = _this$options.data,
          data = _this$options$data === void 0 ? [] : _this$options$data,
          joinBy = _this$options.joinBy;
      this.fillLayer.setData(this.fillData, {
        transforms: data.length === 0 ? [] : [{
          type: 'join',
          sourceField: joinBy[1],
          targetField: joinBy[0],
          data: data
        }]
      });

      if (this.options.bubble && ((_this$options$bubble = this.options.bubble) === null || _this$options$bubble === void 0 ? void 0 : _this$options$bubble.enable) !== false) {
        // TODO 临时处理如果数据为join
        var dataMap = {};
        data.forEach(function (item) {
          dataMap[item[joinBy[1]]] = item;
        });
        var bubbleData = this.fillData.features.map(function (feature) {
          return _objectSpread(_objectSpread({}, feature.properties), {}, {
            center: [feature.properties.x, feature.properties.y]
          });
        }).filter(function (feature) {
          return dataMap[feature[joinBy[0]]];
        });
        this.bubbleLayer.setData(bubbleData, {
          transforms: data.length === 0 ? [] : [{
            type: 'join',
            sourceField: joinBy[1],
            targetField: joinBy[0],
            data: data
          }]
        });
      }
    }
  }, {
    key: "fetchData",
    value: function () {
      var _fetchData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(data) {
        var buffer, geojson;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!(data.type === 'pbf')) {
                  _context.next = 11;
                  break;
                }

                _context.next = 3;
                return fetch(data.url);

              case 3:
                _context.next = 5;
                return _context.sent.arrayBuffer();

              case 5:
                buffer = _context.sent;
                geojson = geobuf__WEBPACK_IMPORTED_MODULE_2__.decode(new (pbf__WEBPACK_IMPORTED_MODULE_5___default())(buffer));

                if (this.options.simplifyTolerance !== false) {
                  geojson = simplify_geojson__WEBPACK_IMPORTED_MODULE_6___default()(geojson, this.options.simplifyTolerance || 0.8);
                }

                return _context.abrupt("return", geojson);

              case 11:
                if (!lodash_isObject__WEBPACK_IMPORTED_MODULE_3___default()(data.url)) {
                  _context.next = 15;
                  break;
                }

                _context.t0 = data.url;
                _context.next = 18;
                break;

              case 15:
                _context.next = 17;
                return fetch(data.url);

              case 17:
                _context.t0 = _context.sent.json();

              case 18:
                return _context.abrupt("return", _context.t0);

              case 19:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function fetchData(_x) {
        return _fetchData.apply(this, arguments);
      }

      return fetchData;
    }()
  }, {
    key: "getDefaultOption",
    value: function getDefaultOption() {
      return {
        zIndex: 0,
        visible: true,
        viewType: 'normal',
        enablePropagation: true,
        geoDataLevel: 2,
        regionType: 'province',
        depth: 1,
        adcode: [],
        joinBy: ['name', 'name'],
        simplifyTolerance: false,
        label: {
          enable: true,
          color: '#000',
          field: 'name',
          size: 10,
          stroke: '#fff',
          strokeWidth: 2,
          textAllowOverlap: true,
          opacity: 1,
          textOffset: [0, 0],
          padding: [5, 5]
        },
        bubble: {
          enable: false,
          shape: 'circle',
          color: '#1AA9FF',
          size: 15,
          style: {
            opacity: 1,
            stroke: '#fff',
            strokeWidth: 1
          }
        },
        fill: {
          scale: null,
          color: '#ddd',
          style: {
            opacity: 1.0
          },
          activeColor: false
        },
        autoFit: true,
        showBorder: true,
        strokeOpacity: 1,
        stroke: '#bdbdbd',
        strokeVisible: true,
        strokeWidth: 0.6,
        cityStroke: '#636363',
        cityStrokeWidth: 0.6,
        countyStrokeWidth: 0.6,
        provinceStrokeWidth: 0.6,
        provinceStroke: '#f0f0f0',
        provinceStrokeVisible: true,
        countyStroke: '#525252',
        coastlineStroke: '#4190da',
        coastlineWidth: 0.6,
        nationalStroke: '#c994c7',
        nationalWidth: 0.5,
        chinaNationalStroke: 'gray',
        chinaNationalWidth: 1,
        popup: {
          enable: true,
          openTriggerEvent: 'mousemove',
          closeTriggerEvent: 'mouseout',
          option: {},
          Html: function Html(properties) {
            return "".concat(properties.name);
          }
        }
      };
    }
  }, {
    key: "addFillLayer",
    value: function addFillLayer(fillCountry) {
      var _this5 = this,
          _this$options$bubble2;

      // 添加省份填充
      var _this$options2 = this.options,
          popup = _this$options2.popup,
          _this$options2$data = _this$options2.data,
          data = _this$options2$data === void 0 ? [] : _this$options2$data,
          fill = _this$options2.fill,
          autoFit = _this$options2.autoFit,
          joinBy = _this$options2.joinBy,
          visible = _this$options2.visible,
          enablePropagation = _this$options2.enablePropagation,
          zIndex = _this$options2.zIndex;
      this.fillData = fillCountry;
      var fillLayer = new _antv_l7__WEBPACK_IMPORTED_MODULE_0__.PolygonLayer({
        autoFit: autoFit,
        visible: visible,
        enablePropagation: enablePropagation,
        zIndex: zIndex
      }).source(fillCountry, {
        transforms: data.length === 0 ? [] : [{
          type: 'join',
          sourceField: joinBy[1],
          targetField: joinBy[0],
          data: data
        }]
      });
      this.setLayerAttribute(fillLayer, 'color', fill.color);
      this.setLayerAttribute(fillLayer, 'filter', fill.filter);

      if (fill.scale && lodash_isObject__WEBPACK_IMPORTED_MODULE_3___default()(fill.color)) {
        var _fill$color;

        fillLayer.scale('color', {
          type: fill.scale,
          //@ts-ignore
          field: fill === null || fill === void 0 ? void 0 : (_fill$color = fill.color) === null || _fill$color === void 0 ? void 0 : _fill$color.field
        });
      }

      fillLayer.shape('fill').style(fill.style);

      if (fill.activeColor) {
        fillLayer.active({
          color: fill.activeColor
        });
      }

      this.fillLayer = fillLayer;
      this.layers.push(fillLayer);
      this.scene.addLayer(fillLayer);

      if (this.options.onClick) {
        this.fillLayer.on('click', function (e) {
          _this5.options && _this5.options.onClick && _this5.options.onClick(e, _this5.layerType);
        });
      }

      if (this.options.bubble && ((_this$options$bubble2 = this.options.bubble) === null || _this$options$bubble2 === void 0 ? void 0 : _this$options$bubble2.enable) !== false) {
        var labeldata = fillCountry.features.map(function (feature) {
          return _objectSpread(_objectSpread({}, feature.properties), {}, {
            center: [feature.properties.x, feature.properties.y]
          });
        });
        this.addBubbleLayer(labeldata);
      }

      this.addPopup(); // 默认添加Popup 事件在
    }
  }, {
    key: "updateLayerAttribute",
    value: function updateLayerAttribute() {
      var layerName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'fill';
      var type = arguments.length > 1 ? arguments[1] : undefined;
      var attr = arguments.length > 2 ? arguments[2] : undefined;
      var layer = this.getLayer(layerName);
      this.setLayerAttribute(layer, type, attr);
    }
  }, {
    key: "enablePopup",
    value: function enablePopup() {
      this.setOption({
        popup: _objectSpread(_objectSpread({}, this.options.popup), {}, {
          enable: true
        })
      });
    }
  }, {
    key: "disablePopup",
    value: function disablePopup() {
      this.setOption({
        popup: _objectSpread(_objectSpread({}, this.options.popup), {}, {
          enable: false
        })
      });
    }
  }, {
    key: "addFillLine",
    value: function addFillLine(provinceLine) {
      var _this$options3 = this.options,
          stroke = _this$options3.stroke,
          strokeWidth = _this$options3.strokeWidth,
          zIndex = _this$options3.zIndex,
          visible = _this$options3.visible,
          strokeOpacity = _this$options3.strokeOpacity;
      var layer2 = new _antv_l7__WEBPACK_IMPORTED_MODULE_0__.LineLayer({
        zIndex: zIndex + 0.1,
        visible: visible
      }).source(provinceLine).color(stroke).size(strokeWidth).style({
        opacity: strokeOpacity
      });
      this.scene.addLayer(layer2);
      this.layers.push(layer2);
      this.lineLayer = layer2;
    }
  }, {
    key: "addLabelLayer",
    value: function addLabelLayer(labelData) {
      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'json';
      var labelLayer = this.addLabel(labelData, type);
      this.scene.addLayer(labelLayer);
      this.layers.push(labelLayer);
      this.labelLayer = labelLayer;
    }
  }, {
    key: "addBubbleLayer",
    value: function addBubbleLayer(labelData) {
      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'json';
      var _this$options4 = this.options,
          bubble = _this$options4.bubble,
          zIndex = _this$options4.zIndex,
          _this$options4$data = _this$options4.data,
          data = _this$options4$data === void 0 ? [] : _this$options4$data,
          joinBy = _this$options4.joinBy,
          visible = _this$options4.visible;
      var bubbleLayer = new _antv_l7__WEBPACK_IMPORTED_MODULE_0__.PointLayer({
        zIndex: zIndex + 0.3,
        visible: visible
      }).source(labelData, {
        parser: {
          type: type,
          coordinates: 'center'
        },
        transforms: data.length === 0 ? [] : [{
          type: 'join',
          sourceField: joinBy[1],
          targetField: joinBy[0],
          data: data
        }]
      });
      this.setLayerAttribute(bubbleLayer, 'color', bubble.color);
      this.setLayerAttribute(bubbleLayer, 'size', bubble.size);
      this.setLayerAttribute(bubbleLayer, 'shape', bubble.shape);
      this.setLayerAttribute(bubbleLayer, 'filter', bubble.filter);

      if (bubble.scale) {
        bubbleLayer.scale(bubble.scale.field, {
          type: bubble.scale.type
        });
      }

      bubbleLayer.style(bubble.style);
      this.scene.addLayer(bubbleLayer);
      this.layers.push(bubbleLayer);
      this.bubbleLayer = bubbleLayer;
      return bubbleLayer;
    }
  }, {
    key: "addLabel",
    value: function addLabel(labelData) {
      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'json';
      var _this$options5 = this.options,
          label = _this$options5.label,
          zIndex = _this$options5.zIndex,
          visible = _this$options5.visible;
      var labelLayer = new _antv_l7__WEBPACK_IMPORTED_MODULE_0__.PointLayer({
        zIndex: zIndex + 5,
        visible: visible
      }).source(labelData, {
        parser: {
          type: type,
          coordinates: 'center'
        }
      }).shape(label.field, 'text').style(label);
      this.setLayerAttribute(labelLayer, 'color', label.color);
      this.setLayerAttribute(labelLayer, 'size', label.size);
      this.setLayerAttribute(labelLayer, 'filter', label.filter);
      return labelLayer;
    }
  }, {
    key: "addPopup",
    value: function addPopup() {
      var _this6 = this;

      var popup = this.options.popup;
      var popupLayer;

      if (popup.triggerLayer) {
        popupLayer = popup.triggerLayer === 'bubble' ? this.bubbleLayer : this.fillLayer;
      } else {
        popupLayer = this.options.bubble.enable ? this.bubbleLayer : this.fillLayer;
      }

      popupLayer.on(popup.openTriggerEvent, function (e) {
        // 增加关闭 popup
        if (!popup.enable) {
          return;
        }

        var html = popup.Html ? popup.Html(e.feature.properties ? e.feature.properties : e.feature) : '';
        _this6.popup = new _antv_l7__WEBPACK_IMPORTED_MODULE_0__.Popup(_objectSpread({
          closeButton: false
        }, popup.option)).setLnglat(e.lngLat).setHTML(html);

        _this6.scene.addPopup(_this6.popup);
      });
      popupLayer.on(popup.closeTriggerEvent, function (e) {
        if (_this6.popup) {
          _this6.popup.remove();
        }
      });
    }
  }, {
    key: "setLayerAttribute",
    value: function setLayerAttribute(layer, type, attr) {
      if (!attr) {
        return;
      }

      if (lodash_isObject__WEBPACK_IMPORTED_MODULE_3___default()(attr)) {
        // @ts-ignore
        layer[type](attr.field, attr.values);
      } else {
        // @ts-ignore
        layer[type](attr);
      }
    }
  }]);

  return BaseLayer;
}(eventemitter3__WEBPACK_IMPORTED_MODULE_1__.EventEmitter);



/***/ }),

/***/ "./node_modules/@antv/l7-district/es/layer/city.js":
/*!*********************************************************!*\
  !*** ./node_modules/@antv/l7-district/es/layer/city.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ CityLayer; }
/* harmony export */ });
/* harmony import */ var lodash_merge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/merge */ "./node_modules/lodash/merge.js");
/* harmony import */ var lodash_merge__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_merge__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _province__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./province */ "./node_modules/@antv/l7-district/es/layer/province.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

// tslint:disable-next-line: no-submodule-imports



var CityLayer = /*#__PURE__*/function (_ProvinceLayer) {
  _inherits(CityLayer, _ProvinceLayer);

  var _super = _createSuper(CityLayer);

  function CityLayer() {
    var _this;

    _classCallCheck(this, CityLayer);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.layerType = 'City';
    return _this;
  }

  _createClass(CityLayer, [{
    key: "getDefaultOption",
    value: function getDefaultOption() {
      var config = _get(_getPrototypeOf(CityLayer.prototype), "getDefaultOption", this).call(this);

      return lodash_merge__WEBPACK_IMPORTED_MODULE_0___default()({}, config, {
        adcode: ['110000'],
        depth: 3
      });
    }
  }, {
    key: "filterData",
    value: function filterData(data, adcode) {
      var adcodeArray = Array.isArray(adcode) ? adcode : [adcode];
      var features = data.features.filter(function (fe) {
        var _fe$properties = fe.properties,
            adcode_cit = _fe$properties.adcode_cit,
            adcode = _fe$properties.adcode;
        return adcodeArray.indexOf(adcode_cit) !== -1 || adcodeArray.indexOf('' + adcode_cit) !== -1 || adcodeArray.indexOf(adcode) !== -1 || adcodeArray.indexOf('' + adcode) !== -1;
      });
      return {
        type: 'FeatureCollection',
        features: features
      };
    }
  }, {
    key: "filterLabelData",
    value: function filterLabelData(data, adcode) {
      var adcodeArray = Array.isArray(adcode) ? adcode : [adcode];
      var features = data.filter(function (fe) {
        var adcode_cit = fe.adcode_cit,
            adcode = fe.adcode;
        return adcodeArray.indexOf(adcode_cit) !== -1 || adcodeArray.indexOf('' + adcode_cit) !== -1 || adcodeArray.indexOf(adcode) !== -1 || adcodeArray.indexOf('' + adcode) !== -1;
      });
      return features;
    }
  }]);

  return CityLayer;
}(_province__WEBPACK_IMPORTED_MODULE_1__.default);



/***/ }),

/***/ "./node_modules/@antv/l7-district/es/layer/country.js":
/*!************************************************************!*\
  !*** ./node_modules/@antv/l7-district/es/layer/country.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ CountryLayer; }
/* harmony export */ });
/* harmony import */ var _antv_l7__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @antv/l7 */ "./node_modules/@antv/l7/es/index.js");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config */ "./node_modules/@antv/l7-district/es/config.js");
/* harmony import */ var _baseLayer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./baseLayer */ "./node_modules/@antv/l7-district/es/layer/baseLayer.js");
/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../const */ "./node_modules/@antv/l7-district/es/const.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }






var CountryLayer = /*#__PURE__*/function (_BaseLayer) {
  _inherits(CountryLayer, _BaseLayer);

  var _super = _createSuper(CountryLayer);

  function CountryLayer(scene) {
    var _this;

    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, CountryLayer);

    _this = _super.call(this, scene, option);
    _this.layerType = 'Country';
    _this.fillRawData = void 0;

    _this.init();

    return _this;
  }

  _createClass(CountryLayer, [{
    key: "init",
    value: function () {
      var _init = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        var _this$options, depth, showBorder, countryConfig;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _this$options = this.options, depth = _this$options.depth, showBorder = _this$options.showBorder;
                _context.next = 3;
                return this.addProvinceFill();

              case 3:
                _context.next = 5;
                return this.addProvinceLabel();

              case 5:
                countryConfig = (0,_config__WEBPACK_IMPORTED_MODULE_1__.getDataConfig)(this.options.geoDataLevel).country.CHN[depth];

                if (!showBorder) {
                  _context.next = 15;
                  break;
                }

                _context.next = 9;
                return this.addProvinceLine(countryConfig.provinceLine);

              case 9:
                if (!(depth === 2 * 1)) {
                  _context.next = 12;
                  break;
                }

                _context.next = 12;
                return this.addCityBorder(countryConfig.fill);

              case 12:
                if (!(depth === 3 * 1)) {
                  _context.next = 15;
                  break;
                }

                _context.next = 15;
                return this.addCountyBorder(countryConfig.fill);

              case 15:
                this.emit('loaded');
                this.loaded = true;

              case 17:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function init() {
        return _init.apply(this, arguments);
      }

      return init;
    }()
  }, {
    key: "addProvinceFill",
    value: function () {
      var _addProvinceFill = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
        var _this$options2, depth, adcode, countryConfig, fillData, data;

        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _this$options2 = this.options, depth = _this$options2.depth, adcode = _this$options2.adcode; // 根据depth 获取数据

                countryConfig = (0,_config__WEBPACK_IMPORTED_MODULE_1__.getDataConfig)(this.options.geoDataLevel).country.CHN[depth];
                _context2.next = 4;
                return this.fetchData(countryConfig.fill);

              case 4:
                fillData = _context2.sent;
                this.fillRawData = fillData;
                data = fillData;

                if (adcode && Array.isArray(adcode) && adcode.length !== 0) {
                  data = this.filterData(fillData, adcode);
                }

                this.fillData = data;
                this.addFillLayer(data);

              case 10:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function addProvinceFill() {
        return _addProvinceFill.apply(this, arguments);
      }

      return addProvinceFill;
    }()
  }, {
    key: "addProvinceLabel",
    value: function () {
      var _addProvinceLabel = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
        var _this$options$label;

        var depth, countryConfig, fillLabel, viewType;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                depth = this.options.depth;
                countryConfig = (0,_config__WEBPACK_IMPORTED_MODULE_1__.getDataConfig)(this.options.geoDataLevel).country.CHN[depth];

                if (!countryConfig.label) {
                  _context3.next = 8;
                  break;
                }

                _context3.next = 5;
                return this.fetchData(countryConfig.label);

              case 5:
                _context3.t0 = _context3.sent;
                _context3.next = 9;
                break;

              case 8:
                _context3.t0 = null;

              case 9:
                fillLabel = _context3.t0;

                if (fillLabel && ((_this$options$label = this.options.label) === null || _this$options$label === void 0 ? void 0 : _this$options$label.enable)) {
                  viewType = this.getOptions().viewType;

                  if (viewType === 'standard') {
                    this.addLabelLayer(fillLabel.filter(function (v) {
                      return v.name !== '澳门';
                    }));
                    this.addMCLabel();
                  } else {
                    this.addLabelLayer(fillLabel);
                  }
                }

              case 11:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function addProvinceLabel() {
        return _addProvinceLabel.apply(this, arguments);
      }

      return addProvinceLabel;
    }() // 国界,省界 完整国界

  }, {
    key: "addProvinceLine",
    value: function () {
      var _addProvinceLine = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(cfg) {
        var lineData, border1, border2, borderFc, borderFc2, nationalBorder, nationalFc;
        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return this.fetchData(cfg);

              case 2:
                lineData = _context4.sent;
                // 普通国界
                border1 = lineData.features.filter(function (feature) {
                  var type = feature.properties.type;
                  return type === '1';
                }); // 香港 澳门

                border2 = lineData.features.filter(function (feature) {
                  var type = feature.properties.type;
                  return type === '4';
                });
                borderFc = {
                  type: 'FeatureCollection',
                  features: border1
                };
                borderFc2 = {
                  type: 'FeatureCollection',
                  features: border2
                };
                nationalBorder = lineData.features.filter(function (feature) {
                  var type = feature.properties.type;
                  return type !== '1' && type !== '4';
                });
                nationalFc = {
                  type: 'FeatureCollection',
                  features: nationalBorder
                };
                this.addNationBorder(nationalFc, borderFc, borderFc2);

              case 10:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function addProvinceLine(_x) {
        return _addProvinceLine.apply(this, arguments);
      }

      return addProvinceLine;
    }() // 普通边界

  }, {
    key: "addNormalProvinceLine",
    value: function () {
      var _addNormalProvinceLine = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(cfg) {
        return regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5);
      }));

      function addNormalProvinceLine(_x2) {
        return _addNormalProvinceLine.apply(this, arguments);
      }

      return addNormalProvinceLine;
    }() // 省级行政区划

  }, {
    key: "addNationBorder",
    value: function () {
      var _addNationBorder = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(boundaries, boundaries2, boundaries3) {
        var _this$options3, nationalStroke, provinceStroke, provinceStrokeWidth, nationalWidth, chinaNationalStroke, chinaNationalWidth, coastlineStroke, coastlineWidth, showBorder, stroke, strokeWidth, visible, zIndex, strokeOpacity, lineLayer, lineLayer2, lineLayer3;

        return regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                _this$options3 = this.options, nationalStroke = _this$options3.nationalStroke, provinceStroke = _this$options3.provinceStroke, provinceStrokeWidth = _this$options3.provinceStrokeWidth, nationalWidth = _this$options3.nationalWidth, chinaNationalStroke = _this$options3.chinaNationalStroke, chinaNationalWidth = _this$options3.chinaNationalWidth, coastlineStroke = _this$options3.coastlineStroke, coastlineWidth = _this$options3.coastlineWidth, showBorder = _this$options3.showBorder, stroke = _this$options3.stroke, strokeWidth = _this$options3.strokeWidth, visible = _this$options3.visible, zIndex = _this$options3.zIndex, strokeOpacity = _this$options3.strokeOpacity; // 添加国界线

                lineLayer = new _antv_l7__WEBPACK_IMPORTED_MODULE_0__.LineLayer({
                  zIndex: zIndex + 0.1,
                  visible: visible && showBorder
                }).source(boundaries).size('type', function (v) {
                  if (v === '3') {
                    return provinceStrokeWidth;
                  } else if (v === '2') {
                    return coastlineWidth;
                  } else if (v === '0') {
                    return chinaNationalWidth;
                  } else {
                    return '#fff';
                  }
                }).shape('line').color('type', function (v) {
                  if (v === '3') {
                    return provinceStroke; // 省界
                  } else if (v === '2') {
                    return coastlineStroke; // 海岸线
                  } else if (v === '0') {
                    return chinaNationalStroke; // 中国国界线
                  } else {
                    return '#fff';
                  }
                }); // 添加未定国界

                lineLayer2 = new _antv_l7__WEBPACK_IMPORTED_MODULE_0__.LineLayer({
                  zIndex: zIndex + 0.1,
                  visible: visible && showBorder
                }).source(boundaries2).size(chinaNationalWidth).shape('line').color(chinaNationalStroke).style({
                  lineType: 'dash',
                  dashArray: [2, 2]
                }); // 添加澳门香港界限

                lineLayer3 = new _antv_l7__WEBPACK_IMPORTED_MODULE_0__.LineLayer({
                  zIndex: zIndex + 0.1,
                  visible: visible && showBorder
                }).source(boundaries3).size(provinceStrokeWidth).shape('line').color(provinceStroke).style({
                  lineType: 'dash',
                  dashArray: [4, 2, 2, 2]
                });
                this.scene.addLayer(lineLayer);
                this.scene.addLayer(lineLayer2);
                this.scene.addLayer(lineLayer3);
                this.layers.push(lineLayer, lineLayer2, lineLayer3);

              case 8:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function addNationBorder(_x3, _x4, _x5) {
        return _addNationBorder.apply(this, arguments);
      }

      return addNationBorder;
    }() // 市边界

  }, {
    key: "addCityBorder",
    value: function () {
      var _addCityBorder = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(cfg) {
        var border1, _this$options4, cityStroke, cityStrokeWidth, visible, strokeOpacity, cityline;

        return regeneratorRuntime.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                _context7.next = 2;
                return this.fetchData(cfg);

              case 2:
                border1 = _context7.sent;
                _this$options4 = this.options, cityStroke = _this$options4.cityStroke, cityStrokeWidth = _this$options4.cityStrokeWidth, visible = _this$options4.visible, strokeOpacity = _this$options4.strokeOpacity;
                cityline = new _antv_l7__WEBPACK_IMPORTED_MODULE_0__.LineLayer({
                  zIndex: 2,
                  visible: visible
                }).source(border1).color(cityStroke).size(cityStrokeWidth).style({
                  opacity: strokeOpacity
                });
                this.scene.addLayer(cityline);
                this.layers.push(cityline);

              case 7:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));

      function addCityBorder(_x6) {
        return _addCityBorder.apply(this, arguments);
      }

      return addCityBorder;
    }() // 县级边界

  }, {
    key: "addCountyBorder",
    value: function () {
      var _addCountyBorder = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(cfg) {
        var border1, _this$options5, countyStrokeWidth, countyStroke, visible, strokeOpacity, cityline;

        return regeneratorRuntime.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                _context8.next = 2;
                return this.fetchData(cfg);

              case 2:
                border1 = _context8.sent;
                _this$options5 = this.options, countyStrokeWidth = _this$options5.countyStrokeWidth, countyStroke = _this$options5.countyStroke, visible = _this$options5.visible, strokeOpacity = _this$options5.strokeOpacity;
                cityline = new _antv_l7__WEBPACK_IMPORTED_MODULE_0__.LineLayer({
                  zIndex: 2,
                  visible: visible
                }).source(border1).color(countyStroke).size(countyStrokeWidth).style({
                  opacity: strokeOpacity
                });
                this.scene.addLayer(cityline);
                this.layers.push(cityline);

              case 7:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8, this);
      }));

      function addCountyBorder(_x7) {
        return _addCountyBorder.apply(this, arguments);
      }

      return addCountyBorder;
    }()
  }, {
    key: "addMCLabel",
    value: function addMCLabel() {
      var data = [{
        name: '澳门',
        center: [113.537747, 22.187009]
      }];
      var labelLayer1 = this.addText(data, {
        maxZoom: 2.9
      }, [-45, -10]);
      var labelLayer2 = this.addText(data, {
        minZoom: 3,
        maxZoom: 4
      }, [-35, -10]);
      var labelLayer = this.addText(data, {
        minZoom: 4.1
      }, [0, 0]);
      this.scene.addLayer(labelLayer);
      this.scene.addLayer(labelLayer1);
      this.scene.addLayer(labelLayer2);
      this.layers.push(labelLayer, labelLayer1, labelLayer2);
    }
  }, {
    key: "filterData",
    value: function filterData(data, adcode) {
      var adcodeArray = Array.isArray(adcode) ? adcode : [adcode];
      var features = data.features.filter(function (fe) {
        // 根据Code过滤数据
        var _fe$properties = fe.properties,
            REGION_CODE = _fe$properties.REGION_CODE,
            adcode_pro = _fe$properties.adcode_pro;
        return adcodeArray.indexOf('86') !== -1 || adcodeArray.indexOf(86) !== -1 || adcodeArray.indexOf(REGION_CODE) !== -1 || adcodeArray.indexOf('' + REGION_CODE) !== -1 || adcodeArray.indexOf(adcode_pro) !== -1 || adcodeArray.indexOf('' + adcode_pro) !== -1;
      });
      return {
        type: 'FeatureCollection',
        features: features
      };
    }
  }, {
    key: "addText",
    value: function addText(labelData, option, offset) {
      var _this$options6 = this.options,
          label = _this$options6.label,
          zIndex = _this$options6.zIndex,
          visible = _this$options6.visible;
      var labelLayer = new _antv_l7__WEBPACK_IMPORTED_MODULE_0__.PointLayer(_objectSpread({
        zIndex: zIndex + 0.4,
        visible: visible
      }, option)).source(labelData, {
        parser: {
          type: 'json',
          coordinates: 'center'
        }
      }).color(label.color).shape('name', 'text').size(label.size).style({
        opacity: label.opacity,
        stroke: label.stroke,
        strokeWidth: label.strokeWidth,
        textAllowOverlap: label.textAllowOverlap,
        textOffset: offset
      });
      return labelLayer;
    }
  }, {
    key: "addRegionLabel",
    value: function addRegionLabel() {
      var data = Object.values(_const__WEBPACK_IMPORTED_MODULE_3__.RegionList).map(function (v) {
        return v;
      }); // console.log('data', data);
      // this.addLabelLayer(data);
    }
  }]);

  return CountryLayer;
}(_baseLayer__WEBPACK_IMPORTED_MODULE_2__.default);



/***/ }),

/***/ "./node_modules/@antv/l7-district/es/layer/county.js":
/*!***********************************************************!*\
  !*** ./node_modules/@antv/l7-district/es/layer/county.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ CityLayer; }
/* harmony export */ });
/* harmony import */ var lodash_merge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/merge */ "./node_modules/lodash/merge.js");
/* harmony import */ var lodash_merge__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_merge__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _province__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./province */ "./node_modules/@antv/l7-district/es/layer/province.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

// tslint:disable-next-line: no-submodule-imports



var CityLayer = /*#__PURE__*/function (_ProvinceLayer) {
  _inherits(CityLayer, _ProvinceLayer);

  var _super = _createSuper(CityLayer);

  function CityLayer() {
    var _this;

    _classCallCheck(this, CityLayer);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.layerType = 'County';
    return _this;
  }

  _createClass(CityLayer, [{
    key: "getDefaultOption",
    value: function getDefaultOption() {
      var config = _get(_getPrototypeOf(CityLayer.prototype), "getDefaultOption", this).call(this);

      return lodash_merge__WEBPACK_IMPORTED_MODULE_0___default()({}, config, {
        adcode: ['110100'],
        depth: 3
      });
    }
  }, {
    key: "filterData",
    value: function filterData(data, adcode) {
      var adcodeArray = Array.isArray(adcode) ? adcode : [adcode];
      var features = data.features.filter(function (fe) {
        var code = fe.properties.adcode;
        return adcodeArray.indexOf(code) !== -1 || adcodeArray.indexOf('' + code) !== -1;
      });
      return {
        type: 'FeatureCollection',
        features: features
      };
    }
  }, {
    key: "filterLabelData",
    value: function filterLabelData(data, adcode) {
      var adcodeArray = Array.isArray(adcode) ? adcode : [adcode];
      var features = data.filter(function (fe) {
        var code = fe.adcode;
        return adcodeArray.indexOf(code) !== -1 || adcodeArray.indexOf('' + code) !== -1;
      });
      return features;
    }
  }]);

  return CityLayer;
}(_province__WEBPACK_IMPORTED_MODULE_1__.default);



/***/ }),

/***/ "./node_modules/@antv/l7-district/es/layer/drillDown.js":
/*!**************************************************************!*\
  !*** ./node_modules/@antv/l7-district/es/layer/drillDown.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ DrillDownLayer; }
/* harmony export */ });
/* harmony import */ var lodash_mergeWith__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/mergeWith */ "./node_modules/lodash/mergeWith.js");
/* harmony import */ var lodash_mergeWith__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_mergeWith__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _city__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./city */ "./node_modules/@antv/l7-district/es/layer/city.js");
/* harmony import */ var _country__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./country */ "./node_modules/@antv/l7-district/es/layer/country.js");
/* harmony import */ var _region__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./region */ "./node_modules/@antv/l7-district/es/layer/region.js");
/* harmony import */ var _province__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./province */ "./node_modules/@antv/l7-district/es/layer/province.js");
/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../const */ "./node_modules/@antv/l7-district/es/const.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

// tslint:disable-next-line: no-submodule-imports







function mergeCustomizer(objValue, srcValue) {
  if (Array.isArray(srcValue)) {
    return srcValue;
  }
}

var DrillDownLayer = /*#__PURE__*/function () {
  function DrillDownLayer(scene, option) {
    _classCallCheck(this, DrillDownLayer);

    this.drillState = void 0;
    this.options = void 0;
    this.regionLayer = void 0;
    this.cityLayer = void 0;
    this.countyLayer = void 0;
    this.provinceLayer = void 0;
    this.scene = void 0;
    this.layers = [];
    this.drillList = void 0;
    this.options = lodash_mergeWith__WEBPACK_IMPORTED_MODULE_0___default()(this.getDefaultOption(), option, mergeCustomizer);
    this.drillState = this.options.viewStart;
    this.scene = scene;
    this.drillList = this.getViewList(); // 初始化各层级图层；

    this.initLayers(scene);
    this.initLayerEvent();
    this.scene.setMapStatus({
      doubleClickZoom: false
    });
  }

  _createClass(DrillDownLayer, [{
    key: "getDefaultOption",
    value: function getDefaultOption() {
      return {
        drillDepth: 2,
        drillStart: 1,
        customTrigger: false,
        autoUpdateData: true,
        regionDrill: false,
        drillDownTriggerEvent: 'click',
        drillUpTriggerEvent: 'undblclick',
        provinceData: [],
        viewStart: 'Country',
        viewEnd: 'County',
        cityData: [],
        countyData: [],
        city: {
          adcode: [],
          depth: 2
        },
        region: {
          adcode: [],
          depth: 1
        },
        county: {
          adcode: []
        }
      };
    } // 国家视角 下钻

  }, {
    key: "addCountryEvent",
    value: function addCountryEvent() {
      var _this = this;

      var _this$options = this.options,
          drillDownTriggerEvent = _this$options.drillDownTriggerEvent,
          drillDownEvent = _this$options.drillDownEvent; // 省级下钻到市

      this.provinceLayer.fillLayer.on(drillDownTriggerEvent, function (e) {
        var adcode = e.feature.properties.adcode;
        var type = 'Province';
        _this.drillState = 'Province';

        if (_this.options.regionDrill) {
          var REGION_CODE = e.feature.properties.REGION_CODE;
          adcode = _const__WEBPACK_IMPORTED_MODULE_5__.RegionList[REGION_CODE].child; // 下钻到省级

          _this.drillState = 'Region';
          type = 'Region';
        } // 下钻到省份


        if (_this.options.autoUpdateData) {
          _this.drillDown(adcode);
        } // 下钻事件


        if (_this.drillList.indexOf(type) !== -1) {
          _this.provinceLayer.hide();

          drillDownEvent && drillDownEvent(e.feature.properties, type, adcode);
        }
      });
    } // 大区下钻

  }, {
    key: "addRegionEvent",
    value: function addRegionEvent() {
      var _this2 = this;

      var _this$options2 = this.options,
          drillDownTriggerEvent = _this$options2.drillDownTriggerEvent,
          drillUpTriggerEvent = _this$options2.drillUpTriggerEvent,
          drillUpEvent = _this$options2.drillUpEvent,
          drillDownEvent = _this$options2.drillDownEvent;
      this.regionLayer.fillLayer.on(drillUpTriggerEvent, function (e) {
        // const properties = this.getProperties(
        //   this.regionLayer.getFillData(),
        //   this.regionLayer.getOptions().adcode,
        // );
        _this2.drillUp('Country');

        if (_this2.drillList.indexOf('Country') !== -1) drillUpEvent && drillUpEvent({
          from: 'region',
          to: 'country'
        });
      });
      this.regionLayer.fillLayer.on(drillDownTriggerEvent, function (e) {
        _this2.drillState = 'Province';

        if (_this2.options.autoUpdateData) {
          _this2.drillDown(e.feature.properties.adcode);
        } // 是否下钻


        if (_this2.drillList.indexOf('Province') !== -1) {
          _this2.regionLayer.hide();

          drillDownEvent && drillDownEvent(e.feature.properties, 'Province', e.feature.properties.adcode);
        }
      });
    } // 省份视角下钻

  }, {
    key: "addProvinceEvent",
    value: function addProvinceEvent() {
      var _this3 = this;

      var _this$options3 = this.options,
          drillDownTriggerEvent = _this$options3.drillDownTriggerEvent,
          drillUpTriggerEvent = _this$options3.drillUpTriggerEvent,
          drillUpEvent = _this$options3.drillUpEvent,
          drillDownEvent = _this$options3.drillDownEvent;
      this.cityLayer.fillLayer.on(drillUpTriggerEvent, function () {
        // const properties = this.getProperties(
        //   this.provinceLayer.getFillData(),
        //   this.cityLayer.getOptions().adcode,
        // );
        _this3.drillState = 'Province';
        var next = _this3.options.regionDrill ? 'Region' : 'Country';

        _this3.drillUp(next);

        if (_this3.drillList.indexOf(next) !== -1) drillUpEvent && drillUpEvent({
          to: next,
          from: 'Province'
        });
      });
      this.cityLayer.fillLayer.on(drillDownTriggerEvent, function (e) {
        _this3.drillState = 'City';

        if (_this3.options.autoUpdateData) {
          _this3.drillDown(e.feature.properties.adcode);
        }

        if (_this3.drillList.indexOf('City') !== -1) {
          drillDownEvent && drillDownEvent(e.feature.properties, 'City', e.feature.properties.adcode);
        }
      });
    } // 添加县级行政区划

  }, {
    key: "addCityEvent",
    value: function addCityEvent() {
      var _this4 = this;

      var _this$options4 = this.options,
          drillDownTriggerEvent = _this$options4.drillDownTriggerEvent,
          drillUpTriggerEvent = _this$options4.drillUpTriggerEvent,
          drillUpEvent = _this$options4.drillUpEvent;
      this.countyLayer.fillLayer.on(drillUpTriggerEvent, function () {
        // const properties = this.getProperties(
        //   this.cityLayer.getFillData(),
        //   this.countyLayer.getOptions().adcode,
        // );
        _this4.drillUp('Province');

        if (_this4.drillList.indexOf('Province') !== -1) drillUpEvent && drillUpEvent({
          to: 'Province',
          from: 'city'
        });
      });
    }
  }, {
    key: "show",
    value: function show() {
      this.layers.forEach(function (layer) {
        return layer.show();
      });
    }
  }, {
    key: "hide",
    value: function hide() {
      this.layers.forEach(function (layer) {
        return layer.hide();
      });
    }
  }, {
    key: "destroy",
    value: function destroy() {
      this.layers.forEach(function (layer) {
        return layer.destroy();
      });
    } // 省份视图 城市粒度

  }, {
    key: "showProvinceView",
    value: function showProvinceView(adcode, newData, joinByField) {
      this.cityLayer.show();
      this.cityLayer.updateDistrict(adcode, newData, joinByField);
      this.cityLayer.fillLayer.fitBounds();

      if (this.options.regionDrill) {
        this.regionLayer.hide();
      } else {
        this.provinceLayer.hide();
      }

      this.drillState = 'Province';
    } // 城市视图 区县粒度

  }, {
    key: "showCityView",
    value: function showCityView(code, newData, joinByField) {
      this.countyLayer.show();
      var adcode = "".concat(code);

      if (adcode.substr(0, 4) === '5000') {
        // 重庆包含两个编码
        adcode = [adcode.substr(0, 2) + '0100', adcode.substr(0, 2) + '0200'];
      } else if (adcode.substr(2, 2) === '00' && adcode !== '810000' && adcode !== '820000') {
        adcode = [adcode.substr(0, 2) + '0100'];
      } // 更新县级行政区划


      this.countyLayer.updateDistrict(adcode, newData, joinByField);
      this.countyLayer.fillLayer.fitBounds();
      this.cityLayer.hide();
      this.drillState = 'City';
    } // 大区视图 省份视角

  }, {
    key: "showRegionView",
    value: function showRegionView(adcode, newData, joinByField) {
      this.regionLayer.show();
      this.regionLayer.updateDistrict(adcode, newData, joinByField);
      this.regionLayer.fillLayer.fitBounds();
      this.provinceLayer.hide();
      this.drillState = 'Region';
    }
    /**
     * 向上
     */

  }, {
    key: "drillUp",
    value: function drillUp(type) {
      if (this.drillList.indexOf(type) === -1) {
        return;
      }

      switch (type) {
        case 'Province':
          this.cityLayer.show();
          this.cityLayer.fillLayer.fitBounds();
          this.countyLayer.hide();
          this.drillState = 'Province';
          break;

        case 'Country':
          this.provinceLayer.show();
          this.provinceLayer.fillLayer.fitBounds();

          if (this.options.regionDrill) {
            this.regionLayer.hide();
          } else {
            this.cityLayer.hide();
          }

          this.drillState = 'Country';
          break;

        case 'Region':
          if (this.options.regionDrill) {
            this.regionLayer.show();
            this.regionLayer.fillLayer.fitBounds();
            this.cityLayer.hide();
            this.drillState = 'Region';
          }

          break;
      }
    }
  }, {
    key: "drillDown",
    value: function drillDown(adcode, newData, joinByField) {
      if (this.drillList.indexOf(this.drillState) === -1) {
        return;
      }

      switch (this.drillState) {
        case 'Province':
          this.showProvinceView(adcode, newData, joinByField); // 市

          break;

        case 'Region':
          this.showRegionView(adcode, newData, joinByField); // 省

          break;

        case 'City':
          this.showCityView(adcode, newData, joinByField); // 区县

          break;
      }
    }
  }, {
    key: "updateData",
    value: function updateData(layer, newData, joinByField) {
      switch (layer) {
        case 'Country':
        case 'province':
          this.provinceLayer.updateData(newData, joinByField);
          break;

        case 'Region':
        case 'region':
          this.regionLayer.updateData(newData, joinByField);
          break;

        case 'Province':
        case 'city':
          this.cityLayer.updateData(newData, joinByField);
          break;

        case 'City':
        case 'county':
          this.countyLayer.updateData(newData, joinByField);
      }
    }
  }, {
    key: "getLayerOption",
    value: function getLayerOption(type) {
      var _this$options5 = this.options,
          joinBy = _this$options5.joinBy,
          label = _this$options5.label,
          bubble = _this$options5.bubble,
          fill = _this$options5.fill,
          popup = _this$options5.popup,
          geoDataLevel = _this$options5.geoDataLevel,
          onClick = _this$options5.onClick;
      var datatype = type.toLowerCase() + 'Data';
      return _objectSpread({
        data: this.options[datatype],
        joinBy: joinBy,
        label: label,
        bubble: bubble,
        fill: fill,
        popup: popup,
        onClick: onClick,
        geoDataLevel: geoDataLevel
      }, this.options[type.toLowerCase()]);
    }
  }, {
    key: "initLayers",
    value: function initLayers(scene) {
      var viewList = this.getViewList();
      viewList.indexOf('Country') !== -1 && (this.provinceLayer = new _country__WEBPACK_IMPORTED_MODULE_2__.default(scene, _objectSpread({}, this.getLayerOption('Province'))));
      viewList.indexOf('Region') !== -1 && (this.regionLayer = new _region__WEBPACK_IMPORTED_MODULE_3__.default(scene, this.getLayerOption('Region')));
      viewList.indexOf('Province') !== -1 && (this.cityLayer = new _province__WEBPACK_IMPORTED_MODULE_4__.default(scene, this.getLayerOption('City')));
      viewList.indexOf('City') !== -1 && (this.countyLayer = new _city__WEBPACK_IMPORTED_MODULE_1__.default(scene, this.getLayerOption('County')));
    }
  }, {
    key: "initLayerEvent",
    value: function initLayerEvent() {
      var _this5 = this;

      var viewList = this.getViewList();

      if (!this.options.customTrigger) {
        viewList.indexOf('Country') !== -1 && this.provinceLayer.on('loaded', function () {
          // 支持大区 或者省份下钻
          _this5.addCountryEvent();

          if (_this5.options.viewStart !== 'Country') _this5.provinceLayer.hide();

          _this5.layers.push(_this5.provinceLayer);
        });
        viewList.indexOf('Region') !== -1 && this.regionLayer.on('loaded', function () {
          // 支持大区 或者省份下钻
          _this5.addRegionEvent();

          if (_this5.options.viewStart !== 'Region') _this5.regionLayer.hide();

          _this5.layers.push(_this5.regionLayer);
        });
        viewList.indexOf('Province') !== -1 && this.cityLayer.on('loaded', function () {
          _this5.addProvinceEvent();

          if (_this5.options.viewStart !== 'Province') _this5.cityLayer.hide();

          _this5.layers.push(_this5.cityLayer);
        });
        viewList.indexOf('City') !== -1 && this.countyLayer.on('loaded', function () {
          _this5.addCityEvent();

          if (_this5.options.viewStart !== 'City') _this5.countyLayer.hide();

          _this5.layers.push(_this5.countyLayer);
        });
      }
    }
  }, {
    key: "getViewList",
    value: function getViewList() {
      var _this$options6 = this.options,
          viewStart = _this$options6.viewStart,
          viewEnd = _this$options6.viewEnd;
      var drillList = _const__WEBPACK_IMPORTED_MODULE_5__.DRILL_TYPE_LIST;

      if (!this.options.regionDrill && drillList.indexOf('Region') !== -1) {
        drillList.splice(1, 1);
      }

      var start = drillList.indexOf(viewStart);
      var end = drillList.indexOf(viewEnd);

      if (start === -1 || end === -1 || end < start) {
        throw new Error('下钻 viewStart, viewEnd 参数错误');
      }

      return drillList.slice(start, end + 1);
    }
  }, {
    key: "getProperties",
    value: function getProperties(data, adcode) {
      var adcodeArray = Array.isArray(adcode) ? adcode : [adcode];
      var feature = data.features.filter(function (fe) {
        var code = fe.properties.adcode;
        return adcodeArray.indexOf(code) !== -1 || adcodeArray.indexOf('' + code) !== -1;
      });
      return feature[0] ? feature[0].properties : {};
    }
  }, {
    key: "enablePopup",
    value: function enablePopup() {
      if (this.cityLayer) {
        this.cityLayer.enablePopup();
      }

      if (this.countyLayer) {
        this.countyLayer.enablePopup();
      }

      if (this.provinceLayer) {
        this.provinceLayer.enablePopup();
      }

      if (this.regionLayer) {
        this.regionLayer.enablePopup();
      }
    }
  }, {
    key: "disablePopup",
    value: function disablePopup() {
      if (this.cityLayer) {
        this.cityLayer.disablePopup();
      }

      if (this.countyLayer) {
        this.countyLayer.disablePopup();
      }

      if (this.provinceLayer) {
        this.provinceLayer.disablePopup();
      }

      if (this.regionLayer) {
        this.regionLayer.disablePopup();
      }
    }
  }]);

  return DrillDownLayer;
}();



/***/ }),

/***/ "./node_modules/@antv/l7-district/es/layer/interface.js":
/*!**************************************************************!*\
  !*** ./node_modules/@antv/l7-district/es/layer/interface.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/@antv/l7-district/es/layer/province.js":
/*!*************************************************************!*\
  !*** ./node_modules/@antv/l7-district/es/layer/province.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ ProvinceLayer; }
/* harmony export */ });
/* harmony import */ var lodash_merge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/merge */ "./node_modules/lodash/merge.js");
/* harmony import */ var lodash_merge__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_merge__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config */ "./node_modules/@antv/l7-district/es/config.js");
/* harmony import */ var _baseLayer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./baseLayer */ "./node_modules/@antv/l7-district/es/layer/baseLayer.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

// tslint:disable-next-line: no-submodule-imports




var ProvinceLayer = /*#__PURE__*/function (_BaseLayer) {
  _inherits(ProvinceLayer, _BaseLayer);

  var _super = _createSuper(ProvinceLayer);

  function ProvinceLayer(scene) {
    var _this;

    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, ProvinceLayer);

    _this = _super.call(this, scene, option);
    _this.fillRawData = void 0;
    _this.lineRawData = void 0;
    _this.labelRawData = void 0;
    _this.layerType = 'Province';

    _this.addProvinceFillLayer();

    return _this;
  } // 通过adcode 更新


  _createClass(ProvinceLayer, [{
    key: "updateDistrict",
    value: function updateDistrict(adcode, newData, joinByField) {
      if (!adcode && Array.isArray(adcode) && adcode.length === 0) {
        this.hide();
        return;
      }

      var _this$options = this.options,
          label = _this$options.label,
          showBorder = _this$options.showBorder;
      this.setOption({
        adcode: adcode
      });
      var fillData = this.filterData(this.fillRawData, adcode);
      var lineData = this.filterData(this.lineRawData, adcode);
      var labelData = this.filterLabelData(this.labelRawData, adcode);
      this.fillData = fillData;
      this.updateData(newData, joinByField);

      if (showBorder) {
        this.lineLayer.setData(lineData);
      }

      if (label.enable && this.labelLayer) {
        this.labelLayer.setData(labelData);
      }

      this.show();
    }
  }, {
    key: "getDefaultOption",
    value: function getDefaultOption() {
      var config = _get(_getPrototypeOf(ProvinceLayer.prototype), "getDefaultOption", this).call(this);

      return lodash_merge__WEBPACK_IMPORTED_MODULE_0___default()({}, config, {
        adcode: ['110000'],
        depth: 2,
        label: {
          field: 'NAME_CHN',
          textAllowOverlap: false
        },
        popup: {
          enable: true,
          Html: function Html(props) {
            return "<span>".concat(props.NAME_CHN, "</span>");
          }
        }
      });
    }
  }, {
    key: "filterData",
    value: function filterData(data, adcode) {
      var adcodeArray = Array.isArray(adcode) ? adcode : [adcode];
      var features = data.features.filter(function (fe) {
        // 根据Code过滤数据
        var _fe$properties = fe.properties,
            adcode_pro = _fe$properties.adcode_pro,
            adcode = _fe$properties.adcode;
        return adcodeArray.indexOf(adcode_pro) !== -1 || adcodeArray.indexOf(adcode) !== -1 || adcodeArray.indexOf('' + adcode_pro) !== -1 || adcodeArray.indexOf('' + adcode) !== -1;
      });
      return {
        type: 'FeatureCollection',
        features: features
      };
    }
  }, {
    key: "filterLabelData",
    value: function filterLabelData(data, adcode) {
      var adcodeArray = Array.isArray(adcode) ? adcode : [adcode];
      var features = data.filter(function (fe) {
        var adcode_pro = fe.adcode_pro,
            adcode = fe.adcode;
        return adcodeArray.indexOf(adcode_pro) !== -1 || adcodeArray.indexOf(adcode) !== -1 || adcodeArray.indexOf('' + adcode_pro) !== -1 || adcodeArray.indexOf('' + adcode) !== -1;
      });
      return features;
    }
  }, {
    key: "addProvinceFillLayer",
    value: function () {
      var _addProvinceFillLayer = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        var _this$options2, depth, adcode, label, showBorder, countryConfig, fillData, data, labelData;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _this$options2 = this.options, depth = _this$options2.depth, adcode = _this$options2.adcode, label = _this$options2.label, showBorder = _this$options2.showBorder;
                countryConfig = (0,_config__WEBPACK_IMPORTED_MODULE_1__.getDataConfig)(this.options.geoDataLevel).country.CHN[depth];
                _context.next = 4;
                return this.fetchData(countryConfig.fill);

              case 4:
                fillData = _context.sent;
                this.labelRawData = fillData.features.map(function (feature) {
                  return _objectSpread(_objectSpread({}, feature.properties), {}, {
                    center: [feature.properties.x, feature.properties.y]
                  });
                });
                data = this.filterData(fillData, adcode);
                this.fillData = data;
                labelData = this.filterLabelData(this.labelRawData, adcode);
                this.fillRawData = fillData;
                this.addFillLayer(data);

                if (label.enable) {
                  this.addLabelLayer(labelData);
                }

                this.lineRawData = fillData;

                if (showBorder) {
                  this.addFillLine(data);
                }

                this.emit('loaded');
                this.loaded = true;

              case 16:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function addProvinceFillLayer() {
        return _addProvinceFillLayer.apply(this, arguments);
      }

      return addProvinceFillLayer;
    }()
  }]);

  return ProvinceLayer;
}(_baseLayer__WEBPACK_IMPORTED_MODULE_2__.default);



/***/ }),

/***/ "./node_modules/@antv/l7-district/es/layer/region.js":
/*!***********************************************************!*\
  !*** ./node_modules/@antv/l7-district/es/layer/region.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ RegionLayer; }
/* harmony export */ });
/* harmony import */ var _province__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./province */ "./node_modules/@antv/l7-district/es/layer/province.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



var RegionLayer = /*#__PURE__*/function (_ProvinceLayer) {
  _inherits(RegionLayer, _ProvinceLayer);

  var _super = _createSuper(RegionLayer);

  function RegionLayer() {
    var _this;

    _classCallCheck(this, RegionLayer);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.layerType = 'Region';
    return _this;
  }

  return RegionLayer;
}(_province__WEBPACK_IMPORTED_MODULE_0__.default);



/***/ }),

/***/ "./node_modules/@antv/l7-district/es/layer/world.js":
/*!**********************************************************!*\
  !*** ./node_modules/@antv/l7-district/es/layer/world.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ WorldLayer; }
/* harmony export */ });
/* harmony import */ var _antv_l7__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @antv/l7 */ "./node_modules/@antv/l7/es/index.js");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config */ "./node_modules/@antv/l7-district/es/config.js");
/* harmony import */ var _baseLayer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./baseLayer */ "./node_modules/@antv/l7-district/es/layer/baseLayer.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }





var WorldLayer = /*#__PURE__*/function (_BaseLayer) {
  _inherits(WorldLayer, _BaseLayer);

  var _super = _createSuper(WorldLayer);

  function WorldLayer(scene) {
    var _this;

    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, WorldLayer);

    _this = _super.call(this, scene, option);

    _this.loadData().then(function (_ref) {
      var _this$options$label;

      var _ref2 = _slicedToArray(_ref, 3),
          fillData = _ref2[0],
          lineData = _ref2[1],
          fillLabel = _ref2[2];

      _this.addFillLayer(fillData);

      if (_this.options.showBorder) {
        _this.addFillLine(lineData);
      }

      if ((_this$options$label = _this.options.label) === null || _this$options$label === void 0 ? void 0 : _this$options$label.enable) {
        _this.addLabelLayer(fillLabel, 'json');
      }

      _this.emit('loaded');

      _this.loaded = true;
    });

    return _this;
  }

  _createClass(WorldLayer, [{
    key: "addFillLine",
    value: function addFillLine(data) {
      // 未定国界
      var bord1 = data.features.filter(function (feature) {
        return feature.properties.type === '10' || feature.properties.type === '1' || feature.properties.type === '11' || feature.properties.type === '8';
      });
      var bordFc = {
        type: 'FeatureCollection',
        features: bord1
      }; // 已确定国界

      var nationalBorder = data.features.filter(function (feature) {
        return feature.properties.type !== '10' && feature.properties.type !== '1' && feature.properties.type !== '11' && feature.properties.type !== '8';
      });
      var nationalFc = {
        type: 'FeatureCollection',
        features: nationalBorder
      };
      this.addNationBorder(nationalFc, bordFc);
    }
  }, {
    key: "loadData",
    value: function () {
      var _loadData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        var countryConfig, fillData, lineData, fillLabel;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                countryConfig = (0,_config__WEBPACK_IMPORTED_MODULE_1__.getDataConfig)(this.options.geoDataLevel).world;
                _context.next = 3;
                return this.fetchData(countryConfig.fill);

              case 3:
                fillData = _context.sent;
                _context.next = 6;
                return this.fetchData(countryConfig.line);

              case 6:
                lineData = _context.sent;
                // const fillLabel = await this.fetchData(countryConfig.label);
                fillLabel = fillData.features.map(function (feature) {
                  return _objectSpread(_objectSpread({}, feature.properties), {}, {
                    center: [feature.properties.x, feature.properties.y]
                  });
                });
                return _context.abrupt("return", [fillData, lineData, fillLabel]);

              case 9:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function loadData() {
        return _loadData.apply(this, arguments);
      }

      return loadData;
    }()
  }, {
    key: "addNationBorder",
    value: function addNationBorder(boundaries, boundaries2) {
      var _this$options = this.options,
          nationalStroke = _this$options.nationalStroke,
          nationalWidth = _this$options.nationalWidth,
          coastlineStroke = _this$options.coastlineStroke,
          chinaNationalStroke = _this$options.chinaNationalStroke,
          chinaNationalWidth = _this$options.chinaNationalWidth,
          coastlineWidth = _this$options.coastlineWidth,
          visible = _this$options.visible,
          zIndex = _this$options.zIndex; // 添加国界线

      var lineLayer = new _antv_l7__WEBPACK_IMPORTED_MODULE_0__.LineLayer({
        zIndex: zIndex + 0.1,
        visible: visible
      }).source(boundaries) // .size(0.6)
      .size('type', function (v) {
        if (v === '0') {
          return chinaNationalWidth; // 中国国界线
        } else if (v === '2' || v === '9') {
          return coastlineWidth; // 中国海岸线
        } else if (v === '7') {
          return nationalWidth; // 国外国界
        } else {
          return nationalWidth;
        }
      }).color('type', function (v) {
        if (v === '0') {
          return chinaNationalStroke; // 中国国界线
        } else if (v === '2' || v === '9') {
          return coastlineStroke; // 中国海岸线
        } else if (v === '7') {
          return nationalStroke; // 国外国界
        } else {
          return nationalStroke;
        }
      }); // 添加未定国界

      var lineLayer2 = new _antv_l7__WEBPACK_IMPORTED_MODULE_0__.LineLayer({
        zIndex: zIndex + 0.1,
        visible: visible
      }).source(boundaries2).size('type', function (v) {
        if (v === '1') {
          return chinaNationalWidth;
        } else {
          return nationalWidth;
        }
      }).shape('line').color('type', function (v) {
        if (v === '1') {
          return chinaNationalStroke;
        } else {
          return nationalStroke;
        }
      }).style({
        lineType: 'dash',
        dashArray: [2, 2]
      });
      this.scene.addLayer(lineLayer);
      this.scene.addLayer(lineLayer2);
      this.layers.push(lineLayer, lineLayer2);
    }
  }]);

  return WorldLayer;
}(_baseLayer__WEBPACK_IMPORTED_MODULE_2__.default);



/***/ }),

/***/ "./node_modules/geobuf/decode.js":
/*!***************************************!*\
  !*** ./node_modules/geobuf/decode.js ***!
  \***************************************/
/***/ (function(module) {

"use strict";


module.exports = decode;

var keys, values, lengths, dim, e;

var geometryTypes = [
    'Point', 'MultiPoint', 'LineString', 'MultiLineString',
    'Polygon', 'MultiPolygon', 'GeometryCollection'];

function decode(pbf) {
    dim = 2;
    e = Math.pow(10, 6);
    lengths = null;

    keys = [];
    values = [];
    var obj = pbf.readFields(readDataField, {});
    keys = null;

    return obj;
}

function readDataField(tag, obj, pbf) {
    if (tag === 1) keys.push(pbf.readString());
    else if (tag === 2) dim = pbf.readVarint();
    else if (tag === 3) e = Math.pow(10, pbf.readVarint());

    else if (tag === 4) readFeatureCollection(pbf, obj);
    else if (tag === 5) readFeature(pbf, obj);
    else if (tag === 6) readGeometry(pbf, obj);
}

function readFeatureCollection(pbf, obj) {
    obj.type = 'FeatureCollection';
    obj.features = [];
    return pbf.readMessage(readFeatureCollectionField, obj);
}

function readFeature(pbf, feature) {
    feature.type = 'Feature';
    var f = pbf.readMessage(readFeatureField, feature);
    if (!('geometry' in f)) f.geometry = null;
    return f;
}

function readGeometry(pbf, geom) {
    geom.type = 'Point';
    return pbf.readMessage(readGeometryField, geom);
}

function readFeatureCollectionField(tag, obj, pbf) {
    if (tag === 1) obj.features.push(readFeature(pbf, {}));

    else if (tag === 13) values.push(readValue(pbf));
    else if (tag === 15) readProps(pbf, obj);
}

function readFeatureField(tag, feature, pbf) {
    if (tag === 1) feature.geometry = readGeometry(pbf, {});

    else if (tag === 11) feature.id = pbf.readString();
    else if (tag === 12) feature.id = pbf.readSVarint();

    else if (tag === 13) values.push(readValue(pbf));
    else if (tag === 14) feature.properties = readProps(pbf, {});
    else if (tag === 15) readProps(pbf, feature);
}

function readGeometryField(tag, geom, pbf) {
    if (tag === 1) geom.type = geometryTypes[pbf.readVarint()];

    else if (tag === 2) lengths = pbf.readPackedVarint();
    else if (tag === 3) readCoords(geom, pbf, geom.type);
    else if (tag === 4) {
        geom.geometries = geom.geometries || [];
        geom.geometries.push(readGeometry(pbf, {}));
    }
    else if (tag === 13) values.push(readValue(pbf));
    else if (tag === 15) readProps(pbf, geom);
}

function readCoords(geom, pbf, type) {
    if (type === 'Point') geom.coordinates = readPoint(pbf);
    else if (type === 'MultiPoint') geom.coordinates = readLine(pbf, true);
    else if (type === 'LineString') geom.coordinates = readLine(pbf);
    else if (type === 'MultiLineString') geom.coordinates = readMultiLine(pbf);
    else if (type === 'Polygon') geom.coordinates = readMultiLine(pbf, true);
    else if (type === 'MultiPolygon') geom.coordinates = readMultiPolygon(pbf);
}

function readValue(pbf) {
    var end = pbf.readVarint() + pbf.pos,
        value = null;

    while (pbf.pos < end) {
        var val = pbf.readVarint(),
            tag = val >> 3;

        if (tag === 1) value = pbf.readString();
        else if (tag === 2) value = pbf.readDouble();
        else if (tag === 3) value = pbf.readVarint();
        else if (tag === 4) value = -pbf.readVarint();
        else if (tag === 5) value = pbf.readBoolean();
        else if (tag === 6) value = JSON.parse(pbf.readString());
    }
    return value;
}

function readProps(pbf, props) {
    var end = pbf.readVarint() + pbf.pos;
    while (pbf.pos < end) props[keys[pbf.readVarint()]] = values[pbf.readVarint()];
    values = [];
    return props;
}

function readPoint(pbf) {
    var end = pbf.readVarint() + pbf.pos,
        coords = [];
    while (pbf.pos < end) coords.push(pbf.readSVarint() / e);
    return coords;
}

function readLinePart(pbf, end, len, closed) {
    var i = 0,
        coords = [],
        p, d;

    var prevP = [];
    for (d = 0; d < dim; d++) prevP[d] = 0;

    while (len ? i < len : pbf.pos < end) {
        p = [];
        for (d = 0; d < dim; d++) {
            prevP[d] += pbf.readSVarint();
            p[d] = prevP[d] / e;
        }
        coords.push(p);
        i++;
    }
    if (closed) coords.push(coords[0]);

    return coords;
}

function readLine(pbf) {
    return readLinePart(pbf, pbf.readVarint() + pbf.pos);
}

function readMultiLine(pbf, closed) {
    var end = pbf.readVarint() + pbf.pos;
    if (!lengths) return [readLinePart(pbf, end, null, closed)];

    var coords = [];
    for (var i = 0; i < lengths.length; i++) coords.push(readLinePart(pbf, end, lengths[i], closed));
    lengths = null;
    return coords;
}

function readMultiPolygon(pbf) {
    var end = pbf.readVarint() + pbf.pos;
    if (!lengths) return [[readLinePart(pbf, end, null, true)]];

    var coords = [];
    var j = 1;
    for (var i = 0; i < lengths[0]; i++) {
        var rings = [];
        for (var k = 0; k < lengths[j]; k++) rings.push(readLinePart(pbf, end, lengths[j + 1 + k], true));
        j += lengths[j] + 1;
        coords.push(rings);
    }
    lengths = null;
    return coords;
}


/***/ }),

/***/ "./node_modules/geobuf/encode.js":
/*!***************************************!*\
  !*** ./node_modules/geobuf/encode.js ***!
  \***************************************/
/***/ (function(module) {

"use strict";


module.exports = encode;

var keys, keysNum, keysArr, dim, e,
    maxPrecision = 1e6;

var geometryTypes = {
    'Point': 0,
    'MultiPoint': 1,
    'LineString': 2,
    'MultiLineString': 3,
    'Polygon': 4,
    'MultiPolygon': 5,
    'GeometryCollection': 6
};

function encode(obj, pbf) {
    keys = {};
    keysArr = [];
    keysNum = 0;
    dim = 0;
    e = 1;

    analyze(obj);

    e = Math.min(e, maxPrecision);
    var precision = Math.ceil(Math.log(e) / Math.LN10);

    for (var i = 0; i < keysArr.length; i++) pbf.writeStringField(1, keysArr[i]);
    if (dim !== 2) pbf.writeVarintField(2, dim);
    if (precision !== 6) pbf.writeVarintField(3, precision);

    if (obj.type === 'FeatureCollection') pbf.writeMessage(4, writeFeatureCollection, obj);
    else if (obj.type === 'Feature') pbf.writeMessage(5, writeFeature, obj);
    else pbf.writeMessage(6, writeGeometry, obj);

    keys = null;

    return pbf.finish();
}

function analyze(obj) {
    var i, key;

    if (obj.type === 'FeatureCollection') {
        for (i = 0; i < obj.features.length; i++) analyze(obj.features[i]);

    } else if (obj.type === 'Feature') {
        if (obj.geometry !== null) analyze(obj.geometry);
        for (key in obj.properties) saveKey(key);

    } else if (obj.type === 'Point') analyzePoint(obj.coordinates);
    else if (obj.type === 'MultiPoint') analyzePoints(obj.coordinates);
    else if (obj.type === 'GeometryCollection') {
        for (i = 0; i < obj.geometries.length; i++) analyze(obj.geometries[i]);
    }
    else if (obj.type === 'LineString') analyzePoints(obj.coordinates);
    else if (obj.type === 'Polygon' || obj.type === 'MultiLineString') analyzeMultiLine(obj.coordinates);
    else if (obj.type === 'MultiPolygon') {
        for (i = 0; i < obj.coordinates.length; i++) analyzeMultiLine(obj.coordinates[i]);
    }

    for (key in obj) {
        if (!isSpecialKey(key, obj.type)) saveKey(key);
    }
}

function analyzeMultiLine(coords) {
    for (var i = 0; i < coords.length; i++) analyzePoints(coords[i]);
}

function analyzePoints(coords) {
    for (var i = 0; i < coords.length; i++) analyzePoint(coords[i]);
}

function analyzePoint(point) {
    dim = Math.max(dim, point.length);

    // find max precision
    for (var i = 0; i < point.length; i++) {
        while (Math.round(point[i] * e) / e !== point[i] && e < maxPrecision) e *= 10;
    }
}

function saveKey(key) {
    if (keys[key] === undefined) {
        keysArr.push(key);
        keys[key] = keysNum++;
    }
}

function writeFeatureCollection(obj, pbf) {
    for (var i = 0; i < obj.features.length; i++) {
        pbf.writeMessage(1, writeFeature, obj.features[i]);
    }
    writeProps(obj, pbf, true);
}

function writeFeature(feature, pbf) {
    if (feature.geometry !== null) pbf.writeMessage(1, writeGeometry, feature.geometry);

    if (feature.id !== undefined) {
        if (typeof feature.id === 'number' && feature.id % 1 === 0) pbf.writeSVarintField(12, feature.id);
        else pbf.writeStringField(11, feature.id);
    }

    if (feature.properties) writeProps(feature.properties, pbf);
    writeProps(feature, pbf, true);
}

function writeGeometry(geom, pbf) {
    pbf.writeVarintField(1, geometryTypes[geom.type]);

    var coords = geom.coordinates;

    if (geom.type === 'Point') writePoint(coords, pbf);
    else if (geom.type === 'MultiPoint') writeLine(coords, pbf, true);
    else if (geom.type === 'LineString') writeLine(coords, pbf);
    else if (geom.type === 'MultiLineString') writeMultiLine(coords, pbf);
    else if (geom.type === 'Polygon') writeMultiLine(coords, pbf, true);
    else if (geom.type === 'MultiPolygon') writeMultiPolygon(coords, pbf);
    else if (geom.type === 'GeometryCollection') {
        for (var i = 0; i < geom.geometries.length; i++) pbf.writeMessage(4, writeGeometry, geom.geometries[i]);
    }

    writeProps(geom, pbf, true);
}

function writeProps(props, pbf, isCustom) {
    var indexes = [],
        valueIndex = 0;

    for (var key in props) {
        if (isCustom && isSpecialKey(key, props.type)) {
            continue;
        }
        pbf.writeMessage(13, writeValue, props[key]);
        indexes.push(keys[key]);
        indexes.push(valueIndex++);
    }
    pbf.writePackedVarint(isCustom ? 15 : 14, indexes);
}

function writeValue(value, pbf) {
    if (value === null) return;

    var type = typeof value;

    if (type === 'string') pbf.writeStringField(1, value);
    else if (type === 'boolean') pbf.writeBooleanField(5, value);
    else if (type === 'object') pbf.writeStringField(6, JSON.stringify(value));
    else if (type === 'number') {
        if (value % 1 !== 0) pbf.writeDoubleField(2, value);
        else if (value >= 0) pbf.writeVarintField(3, value);
        else pbf.writeVarintField(4, -value);
    }
}

function writePoint(point, pbf) {
    var coords = [];
    for (var i = 0; i < dim; i++) coords.push(Math.round(point[i] * e));
    pbf.writePackedSVarint(3, coords);
}

function writeLine(line, pbf) {
    var coords = [];
    populateLine(coords, line);
    pbf.writePackedSVarint(3, coords);
}

function writeMultiLine(lines, pbf, closed) {
    var len = lines.length,
        i;
    if (len !== 1) {
        var lengths = [];
        for (i = 0; i < len; i++) lengths.push(lines[i].length - (closed ? 1 : 0));
        pbf.writePackedVarint(2, lengths);
        // TODO faster with custom writeMessage?
    }
    var coords = [];
    for (i = 0; i < len; i++) populateLine(coords, lines[i], closed);
    pbf.writePackedSVarint(3, coords);
}

function writeMultiPolygon(polygons, pbf) {
    var len = polygons.length,
        i, j;
    if (len !== 1 || polygons[0].length !== 1) {
        var lengths = [len];
        for (i = 0; i < len; i++) {
            lengths.push(polygons[i].length);
            for (j = 0; j < polygons[i].length; j++) lengths.push(polygons[i][j].length - 1);
        }
        pbf.writePackedVarint(2, lengths);
    }

    var coords = [];
    for (i = 0; i < len; i++) {
        for (j = 0; j < polygons[i].length; j++) populateLine(coords, polygons[i][j], true);
    }
    pbf.writePackedSVarint(3, coords);
}

function populateLine(coords, line, closed) {
    var i, j,
        len = line.length - (closed ? 1 : 0),
        sum = new Array(dim);
    for (j = 0; j < dim; j++) sum[j] = 0;
    for (i = 0; i < len; i++) {
        for (j = 0; j < dim; j++) {
            var n = Math.round(line[i][j] * e) - sum[j];
            coords.push(n);
            sum[j] += n;
        }
    }
}

function isSpecialKey(key, type) {
    if (key === 'type') return true;
    else if (type === 'FeatureCollection') {
        if (key === 'features') return true;
    } else if (type === 'Feature') {
        if (key === 'id' || key === 'properties' || key === 'geometry') return true;
    } else if (type === 'GeometryCollection') {
        if (key === 'geometries') return true;
    } else if (key === 'coordinates') return true;
    return false;
}


/***/ }),

/***/ "./node_modules/geobuf/index.js":
/*!**************************************!*\
  !*** ./node_modules/geobuf/index.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


exports.encode = __webpack_require__(/*! ./encode */ "./node_modules/geobuf/encode.js");
exports.decode = __webpack_require__(/*! ./decode */ "./node_modules/geobuf/decode.js");


/***/ }),

/***/ "./node_modules/simplify-geojson/index.js":
/*!************************************************!*\
  !*** ./node_modules/simplify-geojson/index.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var simplify = __webpack_require__(/*! simplify-geometry */ "./node_modules/simplify-geometry/lib/index.js")

module.exports = function (geojson, tolerance, dontClone) {
  if (!dontClone) geojson = JSON.parse(JSON.stringify(geojson)) // clone obj
  if (geojson.features) return simplifyFeatureCollection(geojson, tolerance)
  else if (geojson.type && geojson.type === 'Feature') return simplifyFeature(geojson, tolerance)
  else return new Error('FeatureCollection or individual Feature required')
}

module.exports.simplify = function (coordinates, tolerance) {
  return simplify(coordinates, tolerance)
}

// modifies in-place
function simplifyFeature (feat, tolerance) {
  var geom = feat.geometry
  var type = geom.type
  if (type === 'LineString') {
    geom.coordinates = module.exports.simplify(geom.coordinates, tolerance)
  } else if (type === 'Polygon' || type === 'MultiLineString') {
    for (var j = 0; j < geom.coordinates.length; j++) {
      geom.coordinates[j] = module.exports.simplify(geom.coordinates[j], tolerance)
    }
  } else if (type === 'MultiPolygon') {
    for (var k = 0; k < geom.coordinates.length; k++) {
      for (var l = 0; l < geom.coordinates[k].length; l++) {
        geom.coordinates[k][l] = module.exports.simplify(geom.coordinates[k][l], tolerance)
      }
    }
  }
  return feat
}

// modifies in-place
function simplifyFeatureCollection (fc, tolerance) {
  // process all LineString features, skip non LineStrings
  for (var i = 0; i < fc.features.length; i++) {
    fc.features[i] = simplifyFeature(fc.features[i], tolerance)
  }
  return fc
}


/***/ }),

/***/ "./node_modules/simplify-geometry/lib/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/simplify-geometry/lib/index.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var Line = __webpack_require__(/*! ./line */ "./node_modules/simplify-geometry/lib/line.js");

var simplifyGeometry = function(points, tolerance){

  var dmax = 0;
  var index = 0;

  for (var i = 1; i <= points.length - 2; i++){
    var d = new Line(points[0], points[points.length - 1]).perpendicularDistance(points[i]);
    if (d > dmax){
      index = i;
      dmax = d;
    }
  }

  if (dmax > tolerance){
    var results_one = simplifyGeometry(points.slice(0, index), tolerance);
    var results_two = simplifyGeometry(points.slice(index, points.length), tolerance);

    var results = results_one.concat(results_two);

  }

  else if (points.length > 1) {

    results = [points[0], points[points.length - 1]];

  }

  else {

    results = [points[0]];

  }

  return results;


}

module.exports = simplifyGeometry;


/***/ }),

/***/ "./node_modules/simplify-geometry/lib/line.js":
/*!****************************************************!*\
  !*** ./node_modules/simplify-geometry/lib/line.js ***!
  \****************************************************/
/***/ (function(module) {

var Line = function(p1, p2){

  this.p1 = p1;
  this.p2 = p2;

};

Line.prototype.rise = function() {

  return this.p2[1] - this.p1[1];

};

Line.prototype.run = function() {

  return this.p2[0] - this.p1[0];

};

Line.prototype.slope = function(){

  return  this.rise() / this.run();

};

Line.prototype.yIntercept = function(){

  return this.p1[1] - (this.p1[0] * this.slope(this.p1, this.p2));

};

Line.prototype.isVertical = function() {

  return !isFinite(this.slope());

};

Line.prototype.isHorizontal = function() {

  return this.p1[1] == this.p2[1];

};

Line.prototype._perpendicularDistanceHorizontal = function(point){

  return Math.abs(this.p1[1] - point[1]);

};

Line.prototype._perpendicularDistanceVertical = function(point){

  return Math.abs(this.p1[0] - point[0]);

};

Line.prototype._perpendicularDistanceHasSlope = function(point){
  var slope = this.slope();
  var y_intercept = this.yIntercept();

  return Math.abs((slope * point[0]) - point[1] + y_intercept) / Math.sqrt((Math.pow(slope, 2)) + 1);

};

Line.prototype.perpendicularDistance = function(point){
  if (this.isVertical()) {

    return this._perpendicularDistanceVertical(point);

  }

  else if (this.isHorizontal()){

    return this._perpendicularDistanceHorizontal(point);

  }

  else {

    return this._perpendicularDistanceHasSlope(point);

  }

};

module.exports = Line;


/***/ })

}]);