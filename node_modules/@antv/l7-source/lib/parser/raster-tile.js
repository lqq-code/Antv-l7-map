"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = rasterTile;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _interface = require("../interface");

var _getTile = require("../utils/getTile");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var DEFAULT_CONFIG = {
  tileSize: 256,
  minZoom: 0,
  maxZoom: Infinity,
  zoomOffset: 0
};

function rasterTile(data, cfg) {
  var tileDataType = (cfg === null || cfg === void 0 ? void 0 : cfg.dataType) || _interface.RasterTileType.IMAGE;

  var getTileData = function getTileData(tileParams, tile) {
    if (tileDataType === _interface.RasterTileType.IMAGE) {
      return (0, _getTile.getTileImage)(data, tileParams, tile);
    } else {
      return (0, _getTile.getTileBuffer)(data, tileParams, tile, (cfg === null || cfg === void 0 ? void 0 : cfg.format) || _getTile.defaultFormat);
    }
  };

  var tilesetOptions = _objectSpread(_objectSpread(_objectSpread({}, DEFAULT_CONFIG), cfg), {}, {
    getTileData: getTileData
  });

  return {
    data: data,
    dataArray: [],
    tilesetOptions: tilesetOptions,
    isTile: true
  };
}
//# sourceMappingURL=raster-tile.js.map