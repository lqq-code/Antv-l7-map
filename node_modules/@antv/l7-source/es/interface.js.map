{"version":3,"sources":["../src/interface.ts"],"names":["RasterTileType"],"mappings":"AAyBA,WAAYA,cAAZ;;WAAYA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;GAAAA,c,KAAAA,c","sourcesContent":["export type DataType = string | object[] | object;\nexport interface IDictionary<TValue> {\n  [key: string]: TValue;\n}\nexport interface IFeatureKey {\n  [key: string]: {\n    index: number;\n    idField: any;\n  };\n}\n// 解析后返回数据类型\nexport interface IParseDataItem {\n  coordinates: any[];\n  _id: number;\n  [key: string]: any;\n}\nexport interface IParserData {\n  [key: string]: any;\n  dataArray: IParseDataItem[];\n  // 瓦片地图数据字典\n  featureKeys?: IFeatureKey;\n}\n\n// 栅格瓦片解析配置项\n\nexport enum RasterTileType {\n  IMAGE = 'image',\n  ARRAYBUFFER = 'arraybuffer',\n}\nexport interface IRasterTileParserCFG {\n  tileSize?: number;\n  minZoom?: number;\n  maxZoom?: number;\n  zoomOffset?: number;\n  extent?: [number, number, number, number];\n  updateStrategy?: 'overlap' | 'replace';\n  // 指定 feature 编码 id\n  featureId?: string;\n  // 指定矢量瓦片的数据分类\n  sourceLayer?: string;\n  coord?: string;\n  // 指定栅格瓦片的类型\n  dataType?: RasterTileType;\n\n  format?: any;\n}\n\nexport interface IJsonItem {\n  [key: string]: any;\n}\nexport type IJsonData = IJsonItem[];\n"],"file":"interface.js"}