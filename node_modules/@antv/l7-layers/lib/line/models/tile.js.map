{"version":3,"sources":["../../../src/line/models/tile.ts"],"names":["LineModel","createTexture2D","rendererService","texture","update","data","iconService","getCanvas","layer","render","mag","gl","NEAREST","min","premultiplyAlpha","width","height","canvasHeight","getLayerConfig","opacity","textureBlend","lineTexture","iconStep","vertexHeightScale","borderWidth","borderColor","heightfixed","arrow","enable","arrowWidth","arrowHeight","tailWidth","coord","tileOrigin","getDirty","bind","dataTextureTest","dataTextureNeedUpdate","judgeStyleAttributes","encodeData","getEncodedData","calDataFrame","cellLength","cellProperties","rowCount","dataTexture","length","flipY","format","LUMINANCE","type","FLOAT","u_tileOrigin","u_coord","u_dataTexture","u_cellTypeLayout","getCellTypeLayout","u_opacity","Number","u_textureBlend","u_texture","u_line_texture","u_icon_step","u_textSize","u_borderWidth","u_borderColor","u_heightfixed","u_vertexScale","u_arrow","u_arrowHeight","u_arrowWidth","u_tailWidth","undefined","updateTexture","on","buildModels","destroy","off","mask","maskInside","depth","getShaders","frag","vert","triangulation","LineTriangulation","buildLayerModel","moduleName","vertexShader","fragmentShader","primitive","TRIANGLES","blend","getBlend","stencil","line_tile_frag","line_tile_vert","styleAttributeService","registerStyleAttribute","name","AttributeType","Attribute","descriptor","buffer","usage","STATIC_DRAW","size","feature","featureIdx","vertex","attributeIdx","normal","vertexIndex","DYNAMIC_DRAW","Array","isArray","iconMap","getIconMap","x","y","BaseModel"],"mappings":"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","sourcesContent":["import {\n  AttributeType,\n  gl,\n  IEncodeFeature,\n  ILayerConfig,\n  IModel,\n  IModelUniform,\n  ITexture2D,\n} from '@antv/l7-core';\n\nimport { getMask, rgb2arr } from '@antv/l7-utils';\nimport BaseModel from '../../core/BaseModel';\nimport { ILineLayerStyleOptions } from '../../core/interface';\nimport { LineTriangulation } from '../../core/triangulation';\n\nimport line_tile_frag from '../shaders/tile/line_tile_frag.glsl';\nimport line_tile_vert from '../shaders/tile/line_tile_vert.glsl';\n\nexport default class LineModel extends BaseModel {\n  protected texture: ITexture2D;\n  public getUninforms(): IModelUniform {\n    const {\n      opacity = 1,\n      textureBlend = 'normal',\n      lineTexture = false,\n      iconStep = 100,\n      vertexHeightScale = 20.0,\n      borderWidth = 0.0,\n      borderColor = '#ccc',\n      heightfixed = false,\n      arrow = {\n        enable: false,\n        arrowWidth: 2,\n        arrowHeight: 3,\n        tailWidth: 1,\n      },\n      coord = 'lnglat',\n      tileOrigin,\n    } = this.layer.getLayerConfig() as ILineLayerStyleOptions;\n\n    if (this.rendererService.getDirty()) {\n      this.texture.bind();\n    }\n\n    if (this.dataTextureTest && this.dataTextureNeedUpdate({ opacity })) {\n      this.judgeStyleAttributes({ opacity });\n      const encodeData = this.layer.getEncodedData();\n      const { data, width, height } = this.calDataFrame(\n        this.cellLength,\n        encodeData,\n        this.cellProperties,\n      );\n      this.rowCount = height; // 当前数据纹理有多少行\n\n      this.dataTexture =\n        this.cellLength > 0 && data.length > 0\n          ? this.createTexture2D({\n              flipY: true,\n              data,\n              format: gl.LUMINANCE,\n              type: gl.FLOAT,\n              width,\n              height,\n            })\n          : this.createTexture2D({\n              flipY: true,\n              data: [1],\n              format: gl.LUMINANCE,\n              type: gl.FLOAT,\n              width: 1,\n              height: 1,\n            });\n    }\n    return {\n      u_tileOrigin: tileOrigin || [0, 0],\n      u_coord: coord === 'lnglat' ? 1.0 : 0.0,\n      u_dataTexture: this.dataTexture, // 数据纹理 - 有数据映射的时候纹理中带数据，若没有任何数据映射时纹理是 [1]\n      u_cellTypeLayout: this.getCellTypeLayout(),\n      u_opacity: Number(opacity),\n      u_textureBlend: textureBlend === 'normal' ? 0.0 : 1.0,\n\n      // 纹理支持参数\n      u_texture: this.texture, // 贴图\n      u_line_texture: lineTexture ? 1.0 : 0.0, // 传入线的标识\n      u_icon_step: iconStep,\n      u_textSize: [1024, this.iconService.canvasHeight || 128],\n\n      // line border 参数\n      u_borderWidth: borderWidth,\n      u_borderColor: rgb2arr(borderColor),\n\n      // 是否固定高度\n      u_heightfixed: Number(heightfixed),\n\n      // 顶点高度 scale\n      u_vertexScale: vertexHeightScale,\n\n      // arrow\n      u_arrow: Number(arrow.enable),\n      u_arrowHeight: arrow.arrowHeight || 3,\n      u_arrowWidth: arrow.arrowWidth || 2,\n      u_tailWidth: arrow.tailWidth === undefined ? 1 : arrow.tailWidth,\n    };\n  }\n\n  public initModels(): IModel[] {\n    this.updateTexture();\n    this.iconService.on('imageUpdate', this.updateTexture);\n\n    return this.buildModels();\n  }\n\n  public clearModels() {\n    this.texture?.destroy();\n    this.dataTexture?.destroy();\n    this.iconService.off('imageUpdate', this.updateTexture);\n  }\n\n  public buildModels(): IModel[] {\n    const {\n      mask = false,\n      maskInside = true,\n      depth = false,\n    } = this.layer.getLayerConfig() as ILineLayerStyleOptions;\n    const { frag, vert, type } = this.getShaders();\n    this.layer.triangulation = LineTriangulation;\n    return [\n      this.layer.buildLayerModel({\n        moduleName: type,\n        vertexShader: vert,\n        fragmentShader: frag,\n        triangulation: LineTriangulation,\n        primitive: gl.TRIANGLES,\n        blend: this.getBlend(),\n        depth: { enable: depth },\n        // depth: { enable: true },\n        stencil: getMask(mask, maskInside),\n      }),\n    ];\n  }\n\n  /**\n   * 根据参数获取不同的 shader 代码\n   * @returns\n   */\n  public getShaders(): { frag: string; vert: string; type: string } {\n    return {\n      frag: line_tile_frag,\n      vert: line_tile_vert,\n      type: 'line_tile',\n    };\n  }\n\n  protected registerBuiltinAttributes() {\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'distanceAndIndex',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_DistanceAndIndex',\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.STATIC_DRAW,\n          data: [],\n          type: gl.FLOAT,\n        },\n        size: 2,\n        update: (\n          feature: IEncodeFeature,\n          featureIdx: number,\n          vertex: number[],\n          attributeIdx: number,\n          normal: number[],\n          vertexIndex?: number,\n        ) => {\n          return vertexIndex === undefined\n            ? [vertex[3], 10]\n            : [vertex[3], vertexIndex];\n        },\n      },\n    });\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'total_distance',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Total_Distance',\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.STATIC_DRAW,\n          data: [],\n          type: gl.FLOAT,\n        },\n        size: 1,\n        update: (\n          feature: IEncodeFeature,\n          featureIdx: number,\n          vertex: number[],\n          attributeIdx: number,\n        ) => {\n          return [vertex[5]];\n        },\n      },\n    });\n\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'size',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Size',\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT,\n        },\n        size: 2,\n        update: (\n          feature: IEncodeFeature,\n          featureIdx: number,\n          vertex: number[],\n          attributeIdx: number,\n        ) => {\n          const { size = 1 } = feature;\n          return Array.isArray(size) ? [size[0], size[1]] : [size as number, 0];\n        },\n      },\n    });\n\n    // point layer size;\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'normal',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Normal',\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.STATIC_DRAW,\n          data: [],\n          type: gl.FLOAT,\n        },\n        size: 3,\n        update: (\n          feature: IEncodeFeature,\n          featureIdx: number,\n          vertex: number[],\n          attributeIdx: number,\n          normal: number[],\n        ) => {\n          return normal;\n        },\n      },\n    });\n\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'miter',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Miter',\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.STATIC_DRAW,\n          data: [],\n          type: gl.FLOAT,\n        },\n        size: 1,\n        update: (\n          feature: IEncodeFeature,\n          featureIdx: number,\n          vertex: number[],\n          attributeIdx: number,\n        ) => {\n          return [vertex[4]];\n        },\n      },\n    });\n\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'uv',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_iconMapUV',\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT,\n        },\n        size: 2,\n        update: (\n          feature: IEncodeFeature,\n          featureIdx: number,\n          vertex: number[],\n          attributeIdx: number,\n        ) => {\n          const iconMap = this.iconService.getIconMap();\n          const { texture } = feature;\n          const { x, y } = iconMap[texture as string] || { x: 0, y: 0 };\n          return [x, y];\n        },\n      },\n    });\n  }\n\n  private updateTexture = () => {\n    const { createTexture2D } = this.rendererService;\n    if (this.texture) {\n      this.texture.update({\n        data: this.iconService.getCanvas(),\n      });\n      this.layer.render();\n      return;\n    }\n    this.texture = createTexture2D({\n      data: this.iconService.getCanvas(),\n      mag: gl.NEAREST,\n      min: gl.NEAREST,\n      premultiplyAlpha: false,\n      width: 1024,\n      height: this.iconService.canvasHeight || 128,\n    });\n  };\n}\n"],"file":"tile.js"}