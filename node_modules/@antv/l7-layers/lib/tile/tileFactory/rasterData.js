"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _utils = require("../utils");

var _base = _interopRequireDefault(require("./base"));

var _rasterDataLayer = _interopRequireDefault(require("./rasterDataLayer"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var RasterTiffTile = function (_TileFactory) {
  (0, _inherits2.default)(RasterTiffTile, _TileFactory);

  var _super = _createSuper(RasterTiffTile);

  function RasterTiffTile(option) {
    var _this;

    (0, _classCallCheck2.default)(this, RasterTiffTile);
    _this = _super.call(this, option);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "parentLayer", void 0);
    _this.parentLayer = option.parent;
    return _this;
  }

  (0, _createClass2.default)(RasterTiffTile, [{
    key: "createTile",
    value: function createTile(tile, initOptions) {
      var opacity = initOptions.opacity,
          domain = initOptions.domain,
          clampHigh = initOptions.clampHigh,
          clampLow = initOptions.clampLow,
          rampColors = initOptions.rampColors,
          rampColorsData = initOptions.rampColorsData,
          mask = initOptions.mask;
      var rasterdata = tile.data;

      if (!rasterdata.data) {
        console.warn('raster data not exist!');
        return {
          layers: [],
          layerIDList: []
        };
      }

      var layer = new _rasterDataLayer.default({
        visible: tile.isVisible,
        mask: mask
      }).source(rasterdata.data, {
        parser: {
          type: 'raster',
          width: rasterdata.width,
          height: rasterdata.height,
          extent: tile.bboxPolygon.bbox
        }
      }).style({
        opacity: opacity,
        domain: domain,
        clampHigh: clampHigh,
        clampLow: clampLow,
        rampColors: rampColors,
        rampColorsData: rampColorsData
      });
      this.emitEvent([layer], false);
      (0, _utils.registerLayers)(this.parentLayer, [layer]);
      return {
        layers: [layer],
        layerIDList: [layer.id]
      };
    }
  }]);
  return RasterTiffTile;
}(_base.default);

exports.default = RasterTiffTile;
//# sourceMappingURL=rasterData.js.map