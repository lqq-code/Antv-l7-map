import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import BaseModel from '../../core/BaseModel';
import { TMSTileLayer } from '../tmsTileLayer';

var RasterTileModel = function (_BaseModel) {
  _inherits(RasterTileModel, _BaseModel);

  var _super = _createSuper(RasterTileModel);

  function RasterTileModel() {
    _classCallCheck(this, RasterTileModel);

    return _super.apply(this, arguments);
  }

  _createClass(RasterTileModel, [{
    key: "getUninforms",
    value: function getUninforms() {
      return {};
    }
  }, {
    key: "initModels",
    value: function initModels() {
      var _this$layer$getSource;

      if ((_this$layer$getSource = this.layer.getSource()) !== null && _this$layer$getSource !== void 0 && _this$layer$getSource.data.isTile) {
        this.layer.tileLayer = new TMSTileLayer({
          parent: this.layer,
          rendererService: this.rendererService,
          mapService: this.mapService,
          layerService: this.layerService,
          pickingService: this.pickingService
        });
      }

      return this.buildModels();
    }
  }, {
    key: "buildModels",
    value: function buildModels() {
      return [];
    }
  }, {
    key: "registerBuiltinAttributes",
    value: function registerBuiltinAttributes() {}
  }]);

  return RasterTileModel;
}(BaseModel);

export { RasterTileModel as default };
//# sourceMappingURL=tileModel.js.map