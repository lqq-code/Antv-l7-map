{"version":3,"sources":["../../../src/tile/tileLayer/baseTileLayer.ts"],"names":["decodePickingColor","TileLayerManager","BaseTileLayer","parent","rendererService","mapService","layerService","pickingService","select","active","parentSource","getSource","data","tilesetOptions","sourceLayer","coords","featureId","tileLayerManager","initTileSetManager","bindSubLayerEvent","bindSubLayerPick","scaleField","getScaleOptions","children","render","type","tilePickManager","clearPick","filter","child","inited","isVisible","getCurrentSelectedId","map","selectFeature","Uint8Array","setCurrentSelectedId","target","pickLayers","tile","error","console","warn","removeChilds","layerIDList","tilesetManager","tiles","isLoaded","length","createTile","layers","addChilds","isVisibleChange","getChilds","updateLayersConfig","emit","currentTiles","pickColors","selectedId","layer","hooks","beforeHighlight","call","setCurrentPickId","on","e","pickedColors","r","g","b","restLayers","isVector","setSelect","setHighlight","pickId","getPickID","setPickID","renderList","getRenderList","needPick","beforeSelect","source","tileset","initedTileset","bindTilesetEvent","getCurrentView","latLonBounds","zoom","update","version","getLayerConfig","visible","updateLayerConfig","updateLayerRenderList","lastViewStates","toString","timer","clearTimeout","tileUnLoad","tileError","tileUpdate","mapchange","bounds","getBounds","getZoom"],"mappings":"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","sourcesContent":["import {\n  IInteractionTarget,\n  ILayer,\n  ILayerService,\n  IMapService,\n  IScale,\n  IScaleOptions,\n  ISource,\n  ITileLayer,\n  ITileLayerManager,\n  ITileLayerOPtions,\n} from '@antv/l7-core';\nimport { decodePickingColor, Tile, TilesetManager } from '@antv/l7-utils';\nimport { TileLayerManager } from '../manager/tileLayerManager';\n\nexport default class BaseTileLayer implements ITileLayer {\n  public get children() {\n    return this.tileLayerManager.children;\n  }\n  public type: string = 'baseTile';\n  public sourceLayer: string;\n  public parent: ILayer;\n  // 瓦片是否加载成功\n  public initedTileset: boolean = false;\n  // 瓦片数据管理器\n  public tilesetManager: TilesetManager | undefined;\n  public tileLayerManager: ITileLayerManager;\n  public scaleField: any;\n\n  private lastViewStates: {\n    zoom: number;\n    latLonBounds: [number, number, number, number];\n  };\n\n  private timer: any;\n  private mapService: IMapService;\n  private layerService: ILayerService;\n  private pickColors: {\n    select: any;\n    active: any;\n  } = {\n    select: null,\n    active: null,\n  };\n\n  constructor({\n    parent,\n    rendererService,\n    mapService,\n    layerService,\n    pickingService,\n  }: ITileLayerOPtions) {\n    const parentSource = parent.getSource();\n    const { sourceLayer, coords, featureId } =\n      parentSource?.data?.tilesetOptions || {};\n    this.sourceLayer = sourceLayer;\n    this.parent = parent;\n    this.mapService = mapService;\n    this.layerService = layerService;\n\n    this.tileLayerManager = new TileLayerManager(\n      parent,\n      mapService,\n      rendererService,\n      pickingService,\n      layerService,\n    );\n\n    this.initTileSetManager();\n    this.bindSubLayerEvent();\n    this.bindSubLayerPick();\n\n    this.scaleField = this.parent.getScaleOptions();\n  }\n\n  /**\n   * 渲染瓦片的图层\n   */\n  public render() {\n    if (this.tileLayerManager) {\n      this.tileLayerManager.render();\n    }\n  }\n\n  public clearPick(type: string) {\n    if (type === 'mousemove') {\n      this.tileLayerManager.tilePickManager.clearPick();\n    }\n  }\n\n  /**\n   * 清除 select 的选中状态\n   */\n  public clearPickState() {\n    this.children\n      .filter((child) => child.inited && child.isVisible())\n      .filter((child) => child.getCurrentSelectedId() !== null)\n      .map((child) => {\n        this.selectFeature(child, new Uint8Array([0, 0, 0, 0]));\n        child.setCurrentSelectedId(null);\n      });\n  }\n\n  /**\n   * 瓦片图层独立的拾取逻辑\n   * @param target\n   * @returns\n   */\n  public pickLayers(target: IInteractionTarget) {\n    return this.tileLayerManager.pickLayers(target);\n  }\n\n  public tileLoaded(tile: Tile) {\n    //\n  }\n\n  public tileError(error: Error) {\n    console.warn('error:', error);\n  }\n\n  public tileUnLoad(tile: Tile) {\n    this.tileLayerManager.removeChilds(tile.layerIDList, false);\n  }\n\n  public tileUpdate() {\n    // Base Function\n    if (!this.tilesetManager) {\n      return;\n    }\n\n    this.tilesetManager.tiles\n      .filter((tile) => tile.isLoaded)\n      .map((tile) => {\n        if (tile.layerIDList.length === 0) {\n          const { layers, layerIDList } = this.tileLayerManager.createTile(\n            tile,\n          );\n          tile.layerIDList = layerIDList;\n          this.tileLayerManager.addChilds(layers);\n        } else {\n          if (!tile.isVisibleChange) {\n            return;\n          }\n          const layers = this.tileLayerManager.getChilds(tile.layerIDList);\n          this.tileLayerManager.updateLayersConfig(\n            layers,\n            'visible',\n            tile.isVisible,\n          );\n        }\n      });\n\n    if (this.tilesetManager.isLoaded) {\n      // 将事件抛出，图层上可以使用瓦片\n      this.parent.emit('tiles-loaded', this.tilesetManager.currentTiles);\n    }\n  }\n\n  protected setPickState(layers: ILayer[]) {\n    if (this.pickColors.select) {\n      const selectedId = decodePickingColor(this.pickColors.select);\n      layers.map((layer) => {\n        this.selectFeature(layer, this.pickColors.select);\n        layer.setCurrentSelectedId(selectedId);\n      });\n    }\n\n    if (this.pickColors.active) {\n      const selectedId = decodePickingColor(this.pickColors.active);\n      layers\n        .filter((layer) => layer.inited && layer.isVisible())\n        .map((layer) => {\n          layer.hooks.beforeHighlight.call(this.pickColors.active);\n          layer.setCurrentPickId(selectedId);\n        });\n    }\n  }\n\n  private bindSubLayerPick() {\n    this.tileLayerManager.tilePickManager.on('pick', (e) => {\n      // @ts-ignore\n      const [r, g, b] = e.pickedColors;\n\n      if (e.type === 'click') {\n        const restLayers = this.children\n          .filter(\n            (child) => child.inited && child.isVisible() && child.isVector,\n          )\n          .filter((child) => child !== e.layer);\n        this.setSelect(restLayers, [r, g, b]);\n      } else {\n        this.setHighlight([r, g, b]);\n      }\n    });\n\n    this.tileLayerManager.tilePickManager.on('unpick', () => {\n      this.pickColors.active = null;\n    });\n  }\n\n  private setHighlight(pickedColors: any) {\n    const pickId = decodePickingColor(pickedColors);\n    this.pickColors.active = pickedColors;\n    this.children\n      .filter((child) => child.inited && child.isVisible() && child.isVector)\n      // Tip: 使用 vectorLayer 上的 pickID 优化高亮操作（过滤重复操作）\n      // @ts-ignore\n      .filter((child) => child.getPickID() !== pickId)\n      .map((child) => {\n        // @ts-ignore\n        child.setPickID(pickId);\n        child.hooks.beforeHighlight.call(pickedColors);\n      });\n  }\n\n  private setSelect(layers: ILayer[], pickedColors: any) {\n    const selectedId = decodePickingColor(pickedColors);\n    layers.map((layer) => {\n      if (\n        layer.getCurrentSelectedId() === null ||\n        selectedId !== layer.getCurrentSelectedId()\n      ) {\n        this.selectFeature(layer, pickedColors);\n        layer.setCurrentSelectedId(selectedId);\n        this.pickColors.select = pickedColors;\n      } else {\n        this.selectFeature(layer, new Uint8Array([0, 0, 0, 0])); // toggle select\n        layer.setCurrentSelectedId(null);\n        this.pickColors.select = null;\n      }\n    });\n    // unselect normal layer\n    const renderList = this.layerService.getRenderList();\n    renderList\n      .filter(\n        (layer) =>\n          layer.inited &&\n          !layer.isVector &&\n          layer.isVisible() &&\n          layer.needPick('click'),\n      )\n      .filter((layer) => layer.getCurrentSelectedId() !== null)\n      .map((layer) => {\n        this.selectFeature(layer, new Uint8Array([0, 0, 0, 0]));\n        layer.setCurrentSelectedId(null);\n      });\n  }\n\n  private selectFeature(layer: ILayer, pickedColors: Uint8Array | undefined) {\n    // @ts-ignore\n    const [r, g, b] = pickedColors;\n    layer.hooks.beforeSelect.call([r, g, b]);\n  }\n\n  private bindSubLayerEvent() {\n    /**\n     * layer.on('click', (ev) => {}); // 鼠标左键点击图层事件\n     * layer.on('mouseenter', (ev) => {}); // 鼠标进入图层要素\n     * layer.on('mousemove', (ev) => {}); // 鼠标在图层上移动时触发\n     * layer.on('mouseout', (ev) => {}); // 鼠标移出图层要素时触发\n     * layer.on('mouseup', (ev) => {}); // 鼠标在图层上单击抬起时触发\n     * layer.on('mousedown', (ev) => {}); // 鼠标在图层上单击按下时触发\n     * layer.on('contextmenu', (ev) => {}); // 图层要素点击右键菜单\n     *\n     *  鼠标在图层外的事件\n     * layer.on('unclick', (ev) => {}); // 图层外点击\n     * layer.on('unmousemove', (ev) => {}); // 图层外移动\n     * layer.on('unmouseup', (ev) => {}); // 图层外鼠标抬起\n     * layer.on('unmousedown', (ev) => {}); // 图层外单击按下时触发\n     * layer.on('uncontextmenu', (ev) => {}); // 图层外点击右键\n     * layer.on('unpick', (ev) => {}); // 图层外的操作的所有事件\n     */\n    this.parent.on('subLayerClick', (e) => {\n      this.parent.emit('click', { ...e });\n    });\n    this.parent.on('subLayerMouseMove', (e) =>\n      this.parent.emit('mousemove', { ...e }),\n    );\n    this.parent.on('subLayerMouseUp', (e) =>\n      this.parent.emit('mouseup', { ...e }),\n    );\n    this.parent.on('subLayerMouseEnter', (e) =>\n      this.parent.emit('mouseenter', { ...e }),\n    );\n    this.parent.on('subLayerMouseOut', (e) =>\n      this.parent.emit('mouseout', { ...e }),\n    );\n    this.parent.on('subLayerMouseDown', (e) =>\n      this.parent.emit('mousedown', { ...e }),\n    );\n    this.parent.on('subLayerContextmenu', (e) =>\n      this.parent.emit('contextmenu', { ...e }),\n    );\n\n    // vector layer 图层外事件\n    this.parent.on('subLayerUnClick', (e) =>\n      this.parent.emit('unclick', { ...e }),\n    );\n    this.parent.on('subLayerUnMouseMove', (e) =>\n      this.parent.emit('unmousemove', { ...e }),\n    );\n    this.parent.on('subLayerUnMouseUp', (e) =>\n      this.parent.emit('unmouseup', { ...e }),\n    );\n    this.parent.on('subLayerUnMouseDown', (e) =>\n      this.parent.emit('unmousedown', { ...e }),\n    );\n    this.parent.on('subLayerUnContextmenu', (e) =>\n      this.parent.emit('uncontextmenu', { ...e }),\n    );\n  }\n\n  private initTileSetManager() {\n    const source: ISource = this.parent.getSource();\n    this.tilesetManager = source.tileset as TilesetManager;\n\n    if (!this.initedTileset) {\n      this.bindTilesetEvent();\n      this.initedTileset = true;\n    }\n\n    const { latLonBounds, zoom } = this.getCurrentView();\n    this.tilesetManager?.update(zoom, latLonBounds);\n  }\n\n  private mapchange() {\n    const { latLonBounds, zoom } = this.getCurrentView();\n\n    if (this.mapService.version === 'GAODE1.x') {\n      const { visible } = this.parent.getLayerConfig();\n      if (zoom < 3 && visible) {\n        this.parent.updateLayerConfig({ visible: false });\n        this.layerService.updateLayerRenderList();\n      } else if (zoom >= 3 && !visible) {\n        this.parent.updateLayerConfig({ visible: true });\n        this.layerService.updateLayerRenderList();\n      }\n    }\n\n    if (\n      this.lastViewStates &&\n      this.lastViewStates.zoom === zoom &&\n      this.lastViewStates.latLonBounds.toString() === latLonBounds.toString()\n    ) {\n      return;\n    }\n    this.lastViewStates = { zoom, latLonBounds };\n\n    if (this.timer) {\n      clearTimeout(this.timer);\n      this.timer = null;\n    }\n\n    // this.timer = setTimeout(() => {\n    this.tilesetManager?.update(zoom, latLonBounds);\n    // }, 250);\n  }\n\n  private bindTilesetEvent() {\n    if (!this.tilesetManager) {\n      return;\n    }\n    // 瓦片数据加载成功\n    this.tilesetManager.on('tile-loaded', (tile: Tile) => {\n      // todo: 将事件抛出，图层上可以监听使用\n    });\n\n    // 瓦片数据从缓存删除或被执行重新加载\n    this.tilesetManager.on('tile-unload', (tile: Tile) => {\n      // todo: 将事件抛出，图层上可以监听使用\n      this.tileUnLoad(tile);\n    });\n\n    // 瓦片数据加载失败\n    this.tilesetManager.on('tile-error', (error, tile: Tile) => {\n      // todo: 将事件抛出，图层上可以监听使用\n      this.tileError(error);\n    });\n\n    // 瓦片显隐状态更新\n    this.tilesetManager.on('tile-update', () => {\n      this.tileUpdate();\n    });\n\n    // 地图视野发生改变\n    this.mapService.on('zoomend', () => this.mapchange());\n    this.mapService.on('moveend', () => this.mapchange());\n  }\n\n  private getCurrentView() {\n    const bounds = this.mapService.getBounds();\n    const latLonBounds: [number, number, number, number] = [\n      bounds[0][0],\n      bounds[0][1],\n      bounds[1][0],\n      bounds[1][1],\n    ];\n    const zoom = this.mapService.getZoom();\n\n    return { latLonBounds, zoom };\n  }\n}\n"],"file":"baseTileLayer.js"}