import { IInteractionTarget, ILayer, ILayerService, IMapService, IPickingService, IRendererService, ITileLayerManager, ITilePickManager } from '@antv/l7-core';
import { Tile } from '@antv/l7-utils';
import { ITileConfigManager } from './tileConfigManager';
export declare class TileLayerManager implements ITileLayerManager {
    sourceLayer: string;
    parent: ILayer;
    children: ILayer[];
    mapService: IMapService;
    rendererService: IRendererService;
    tilePickManager: ITilePickManager;
    tileConfigManager: ITileConfigManager;
    private tileFactory;
    private initOptions;
    private rampColorsData;
    constructor(parent: ILayer, mapService: IMapService, rendererService: IRendererService, pickingService: IPickingService, layerService: ILayerService);
    createTile(tile: Tile): {
        layers: ILayer[];
        layerIDList: string[];
    };
    updateLayersConfig(layers: ILayer[], key: string, value: any): void;
    addChild(layer: ILayer): void;
    addChilds(layers: ILayer[]): void;
    removeChilds(layerIDList: string[], refresh?: boolean): void;
    removeChild(layer: ILayer): void;
    getChilds(layerIDList: string[]): ILayer[];
    getChild(layerID: string): ILayer;
    clearChild(): void;
    hasChild(layer: ILayer): boolean;
    render(): void;
    pickLayers(target: IInteractionTarget): boolean;
    private setSubLayerInitOptipn;
    private setConfigListener;
    private updateStyle;
    private initTileFactory;
}
