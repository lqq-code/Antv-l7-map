{"version":3,"sources":["../../../src/tile/tileFactory/rasterData.ts"],"names":["registerLayers","TileFactory","RasterDataLayer","RasterTiffTile","option","parentLayer","parent","tile","initOptions","opacity","domain","clampHigh","clampLow","rampColors","rampColorsData","mask","rasterdata","data","console","warn","layers","layerIDList","layer","visible","isVisible","source","parser","type","width","height","extent","bboxPolygon","bbox","style","emitEvent","id"],"mappings":";;;;;;;;;;;;AAGA,SAASA,cAAT,QAA+B,UAA/B;AACA,OAAOC,WAAP,MAAwB,QAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;IAEqBC,c;;;;;AAGnB,0BAAYC,MAAZ,EAAyC;AAAA;;AAAA;;AACvC,8BAAMA,MAAN;;AADuC;;AAEvC,UAAKC,WAAL,GAAmBD,MAAM,CAACE,MAA1B;AAFuC;AAGxC;;;;WAED,oBAAkBC,IAAlB,EAA8BC,WAA9B,EAAiE;AAC/D,UACEC,OADF,GAQID,WARJ,CACEC,OADF;AAAA,UAEEC,MAFF,GAQIF,WARJ,CAEEE,MAFF;AAAA,UAGEC,SAHF,GAQIH,WARJ,CAGEG,SAHF;AAAA,UAIEC,QAJF,GAQIJ,WARJ,CAIEI,QAJF;AAAA,UAKEC,UALF,GAQIL,WARJ,CAKEK,UALF;AAAA,UAMEC,cANF,GAQIN,WARJ,CAMEM,cANF;AAAA,UAOEC,IAPF,GAQIP,WARJ,CAOEO,IAPF;AAUA,UAAMC,UAAU,GAAGT,IAAI,CAACU,IAAxB;;AACA,UAAI,CAACD,UAAU,CAACC,IAAhB,EAAsB;AACpBC,QAAAA,OAAO,CAACC,IAAR,CAAa,wBAAb;AACA,eAAO;AACLC,UAAAA,MAAM,EAAE,EADH;AAELC,UAAAA,WAAW,EAAE;AAFR,SAAP;AAID;;AACD,UAAMC,KAAK,GAAG,IAAIpB,eAAJ,CAAoB;AAChCqB,QAAAA,OAAO,EAAEhB,IAAI,CAACiB,SADkB;AAEhCT,QAAAA,IAAI,EAAJA;AAFgC,OAApB,EAIXU,MAJW,CAIJT,UAAU,CAACC,IAJP,EAIa;AACvBS,QAAAA,MAAM,EAAE;AACNC,UAAAA,IAAI,EAAE,QADA;AAENC,UAAAA,KAAK,EAAEZ,UAAU,CAACY,KAFZ;AAGNC,UAAAA,MAAM,EAAEb,UAAU,CAACa,MAHb;AAINC,UAAAA,MAAM,EAAEvB,IAAI,CAACwB,WAAL,CAAiBC;AAJnB;AADe,OAJb,EAYXC,KAZW,CAYL;AACLxB,QAAAA,OAAO,EAAPA,OADK;AAELC,QAAAA,MAAM,EAANA,MAFK;AAGLC,QAAAA,SAAS,EAATA,SAHK;AAILC,QAAAA,QAAQ,EAARA,QAJK;AAKLC,QAAAA,UAAU,EAAVA,UALK;AAMLC,QAAAA,cAAc,EAAdA;AANK,OAZK,CAAd;AAoBA,WAAKoB,SAAL,CAAe,CAACZ,KAAD,CAAf,EAAwB,KAAxB;AAEAtB,MAAAA,cAAc,CAAC,KAAKK,WAAN,EAAmB,CAACiB,KAAD,CAAnB,CAAd;AAEA,aAAO;AACLF,QAAAA,MAAM,EAAE,CAACE,KAAD,CADH;AAELD,QAAAA,WAAW,EAAE,CAACC,KAAK,CAACa,EAAP;AAFR,OAAP;AAID;;;;EAvDyClC,W;;SAAvBE,c","sourcesContent":["import { ILayer, ISubLayerInitOptions } from '@antv/l7-core';\nimport { Tile } from '@antv/l7-utils';\nimport { ITileFactoryOptions } from '../interface';\nimport { registerLayers } from '../utils';\nimport TileFactory from './base';\nimport RasterDataLayer from './rasterDataLayer';\n\nexport default class RasterTiffTile extends TileFactory {\n  public parentLayer: ILayer;\n\n  constructor(option: ITileFactoryOptions) {\n    super(option);\n    this.parentLayer = option.parent;\n  }\n\n  public createTile(tile: Tile, initOptions: ISubLayerInitOptions) {\n    const {\n      opacity,\n      domain,\n      clampHigh,\n      clampLow,\n      rampColors,\n      rampColorsData,\n      mask,\n    } = initOptions;\n\n    const rasterdata = tile.data;\n    if (!rasterdata.data) {\n      console.warn('raster data not exist!');\n      return {\n        layers: [],\n        layerIDList: [],\n      };\n    }\n    const layer = new RasterDataLayer({\n      visible: tile.isVisible,\n      mask,\n    })\n      .source(rasterdata.data, {\n        parser: {\n          type: 'raster',\n          width: rasterdata.width,\n          height: rasterdata.height,\n          extent: tile.bboxPolygon.bbox,\n        },\n      })\n      .style({\n        opacity,\n        domain,\n        clampHigh,\n        clampLow,\n        rampColors,\n        rampColorsData,\n      });\n    this.emitEvent([layer], false);\n\n    registerLayers(this.parentLayer, [layer]);\n\n    return {\n      layers: [layer],\n      layerIDList: [layer.id],\n    };\n  }\n}\n"],"file":"rasterData.js"}