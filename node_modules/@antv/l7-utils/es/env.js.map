{"version":3,"sources":["../src/env.ts"],"names":["isImageBitmap","image","ImageBitmap","isWorker","importScripts","getReferrer","self","worker","referrer","window","location","protocol","parent","href"],"mappings":"AAAA,OAAO,SAASA,aAAT,CAAuBC,KAAvB,EAAyD;AAC9D,SAAO,OAAOC,WAAP,KAAuB,WAAvB,IAAsCD,KAAK,YAAYC,WAA9D;AACD;AAED,OAAO,SAASC,QAAT,GAA6B;AAElC,SAAO,OAAOC,aAAP,KAAyB,UAAhC;AACD;AAOD,OAAO,IAAMC,WAAW,GAAGF,QAAQ,KAC/B;AAAA,SAAOG,IAAD,CAAcC,MAAd,IAAyBD,IAAD,CAAcC,MAAd,CAAqBC,QAAnD;AAAA,CAD+B,GAE/B;AAAA,SACE,CAACC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6B,OAA7B,GAAuCF,MAAM,CAACG,MAA9C,GAAuDH,MAAxD,EAAgEC,QAAhE,CACGG,IAFL;AAAA,CAFG","sourcesContent":["export function isImageBitmap(image: any): image is ImageBitmap {\n  return typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap;\n}\n\nexport function isWorker(): boolean {\n  // @ts-ignore\n  return typeof importScripts === 'function';\n}\n\n// Ensure that we're sending the correct referrer from blob URL worker bundles.\n// For files loaded from the local file system, `location.origin` will be set\n// to the string(!) \"null\" (Firefox), or \"file://\" (Chrome, Safari, Edge, IE),\n// and we will set an empty referrer. Otherwise, we're using the document's URL.\n/* global self */\nexport const getReferrer = isWorker()\n  ? () => (self as any).worker && (self as any).worker.referrer\n  : () =>\n      (window.location.protocol === 'blob:' ? window.parent : window).location\n        .href;\n"],"file":"env.js"}